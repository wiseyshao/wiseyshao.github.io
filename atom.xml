<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hongyuan&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-13T17:12:23.282Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>hongyuan shao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSV Files</title>
    <link href="http://yoursite.com/2018/01/14/CSV-files/"/>
    <id>http://yoursite.com/2018/01/14/CSV-files/</id>
    <published>2018-01-13T16:35:07.000Z</published>
    <updated>2018-01-13T17:12:23.282Z</updated>
    
    <content type="html"><![CDATA[<h3 id="csv-reader-csvfile-dialect-’excel’-fmtparams"><a href="#csv-reader-csvfile-dialect-’excel’-fmtparams" class="headerlink" title="csv.reader(csvfile, dialect=’excel’, *\fmtparams*)"></a><code>csv.reader</code>(<em>csvfile</em>, <em>dialect=’excel’</em>, <em>*\</em>fmtparams*)</h3><p>If <em>csvfile</em> is a file object, it should be opened with <code>newline=&#39;&#39;</code>.</p><p>A short usage example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">with</span> open(<span class="string">'eggs.csv'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> csvfile:</div><div class="line">    spamreader = csv.reader(csvfile, delimiter=<span class="string">' '</span>, quotechar=<span class="string">'|'</span>)</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> spamreader:</div><div class="line">        print(<span class="string">', '</span>.join(row))</div></pre></td></tr></table></figure><h3 id="csv-writer-csvfile-dialect-’excel’-fmtparams"><a href="#csv-writer-csvfile-dialect-’excel’-fmtparams" class="headerlink" title="csv.writer(csvfile, dialect=’excel’, *\fmtparams*)"></a><code>csv.writer</code>(<em>csvfile</em>, <em>dialect=’excel’</em>, <em>*\</em>fmtparams*)</h3><p>If <em>csvfile</em> is a file object, it should be opened with<code>newline=&#39;&#39;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">with</span> open(<span class="string">'eggs.csv'</span>, <span class="string">'w'</span>, newline=<span class="string">''</span>) <span class="keyword">as</span> csvfile:</div><div class="line">    spamwriter = csv.writer(csvfile, delimiter=<span class="string">' '</span>,</div><div class="line">                            quotechar=<span class="string">'|'</span>, quoting=csv.QUOTE_MINIMAL)</div><div class="line">    spamwriter.writerow([<span class="string">'Spam'</span>] * <span class="number">5</span> + [<span class="string">'Baked Beans'</span>])</div><div class="line">    spamwriter.writerow([<span class="string">'Spam'</span>, <span class="string">'Lovely Spam'</span>, <span class="string">'Wonderful Spam'</span>])</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;csv-reader-csvfile-dialect-’excel’-fmtparams&quot;&gt;&lt;a href=&quot;#csv-reader-csvfile-dialect-’excel’-fmtparams&quot; class=&quot;headerlink&quot; title=&quot;csv.
      
    
    </summary>
    
    
      <category term="Python, CSV" scheme="http://yoursite.com/tags/Python-CSV/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫较为常用packages</title>
    <link href="http://yoursite.com/2018/01/11/python%E7%88%AC%E8%99%AB%E8%BE%83%E4%B8%BA%E5%B8%B8%E7%94%A8packages/"/>
    <id>http://yoursite.com/2018/01/11/python爬虫较为常用packages/</id>
    <published>2018-01-11T14:12:32.000Z</published>
    <updated>2018-01-11T14:14:54.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python爬虫较为常用的较冷门的Packages"><a href="#Python爬虫较为常用的较冷门的Packages" class="headerlink" title="Python爬虫较为常用的较冷门的Packages"></a>Python爬虫较为常用的较冷门的Packages</h1><h2 id="CacheControl"><a href="#CacheControl" class="headerlink" title="CacheControl"></a>CacheControl</h2><p><a href="https://cachecontrol.readthedocs.io/en/latest/" target="_blank" rel="external"><strong>CacheControl</strong></a> is a port of the caching algorithms in <a href="http://code.google.com/p/httplib2/" target="_blank" rel="external">httplib2</a> for use with the <a href="http://docs.python-requests.org/" target="_blank" rel="external">requests</a> session object.</p><p>It was written because httplib2’s better support for caching is often mitigated by its lack of thread-safety. The same is true of requests in terms of caching.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python爬虫较为常用的较冷门的Packages&quot;&gt;&lt;a href=&quot;#Python爬虫较为常用的较冷门的Packages&quot; class=&quot;headerlink&quot; title=&quot;Python爬虫较为常用的较冷门的Packages&quot;&gt;&lt;/a&gt;Python爬虫较为常
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Regex Syntax</title>
    <link href="http://yoursite.com/2018/01/08/Regex-syntax/"/>
    <id>http://yoursite.com/2018/01/08/Regex-syntax/</id>
    <published>2018-01-08T07:33:55.000Z</published>
    <updated>2018-01-08T09:59:58.052Z</updated>
    
    <content type="html"><![CDATA[<p><code>&#39;.&#39;</code></p><p>(Dot.) 表示除换行符意外的所有符号。</p><p><code>&#39;$&#39;</code></p><p>本质上来说，代表换行符，为本行的换行符。</p><p><code>&#39;^&#39;</code></p><p>(Caret.)本质上来说也可以表示换行符，只不过是上一行的换行符。</p><p><code>&#39;?&#39;</code></p><p>表示其前面的字符出现一次或者没有出现。</p><p><code>*?</code>, <code>+?</code>, <code>??</code></p><p>The <code>&#39;*&#39;</code>, <code>&#39;+&#39;</code>, and <code>&#39;?&#39;</code>会匹配尽可能多的匹配想，而<code>*?</code>, <code>+?</code>, <code>??</code>一旦发现匹配项即立即终止匹配。</p><p><code>{m,n}?</code></p><p>同上。</p><p><code>&#39;\&#39;</code></p><p>转义符，消除紧连其后符号的特殊意义，只表示符号本身。</p><p><code>[]</code></p><p>Special characters(except ‘/‘) lose their special meaning inside sets.</p><p>Character classes such as <code>\w</code> or <code>\S</code> (defined below) are also accepted inside a set.</p><p> If the first character of the set is <code>&#39;^&#39;</code>, all the characters that are <em>not</em> in the set will be matched. <code>^</code> has no special meaning if it’s not the first character in the set.</p><p>To match a literal <code>&#39;]&#39;</code> inside a set, precede it with a backslash, or place it at the beginning of the set.</p><p><code>(?aiLmsux)</code></p><p>(<strong>One or more</strong> letters from the set <code>&#39;a&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;L&#39;</code>, <code>&#39;m&#39;</code>, <code>&#39;s&#39;</code>, <code>&#39;u&#39;</code>, <code>&#39;x&#39;</code>.) </p><p>The group matches the empty string（也就是说可以把空的string也可以匹配进来）; the letters set the corresponding flags: <a href="#re.A"><code>re.A</code></a> (ASCII-only matching), <a href="#re.I"><code>re.I</code></a> (ignore case), <a href="#re.L"><code>re.L</code></a> (locale dependent),<a href="#re.M"><code>re.M</code></a> (multi-line), <a href="#re.S"><code>re.S</code></a> (dot matches all，即包括换行符), and <a href="#re.X"><code>re.X</code></a> (verbose), for the entire regular expression. </p><p> This is useful if you wish to include the <strong>flags</strong>（也就是多个标识） as part of the regular expression, instead of passing <strong>a <em>flag</em></strong> （而不是一个标识）argument to the <a href="#re.compile"><code>re.compile()</code></a> function. Flags should be used first in the expression string.</p><p><code>(?:...)</code></p><p>表示不匹配匹配但不输出冒号后的内容。</p><p><code>(?imsx-imsx:...)</code></p><p><strong>Zero or more letters</strong> from the set <code>&#39;i&#39;</code>, <code>&#39;m&#39;</code>, <code>&#39;s&#39;</code>, <code>&#39;x&#39;</code>, optionally followed by <code>&#39;-&#39;</code> followed by one or more letters from the same set.因为有了冒号，前面可以有也可以没有<code>&#39;i&#39;</code>, <code>&#39;m&#39;</code>, <code>&#39;s&#39;</code>, <code>&#39;x&#39;</code>。</p><p>最终是匹配但不输出的意思。</p><p><code>(?P&lt;name&gt;...)</code></p><p>Similar to regular parentheses, but the substring matched by the group is accessible via the symbolic group name <em>name</em>. （与常规的括号意义相同，只不过匹配的东西可以用唯一标示的名字来指定）。A symbolic group is also a numbered group, just as if the group were not named.（即是说标示也可以用数字来表示）</p><p> If the pattern is <code>(?P&lt;quote&gt;[&#39;&quot;]).*?(?P=quote)</code> (i.e. matching a string quoted with either single or double quotes):</p><table><thead><tr><th>Context of reference to group “quote”</th><th>Ways to reference it</th></tr></thead><tbody><tr><td>in the same pattern itself</td><td><code>(?P=quote)</code> (as shown)<code>\1</code></td></tr><tr><td>when processing match object <code>m</code></td><td><code>m.group(&#39;quote&#39;)``m.end(&#39;quote&#39;)</code> (etc.)</td></tr><tr><td>in a string passed to the <code>repl</code> argument of <code>re.sub()</code></td><td><code>\g&lt;quote&gt;``\g&lt;1&gt;``\1</code></td></tr></tbody></table><p><code>(?P=name)</code></p><p>A backreference to a named group（回指）</p><p><code>(?#...)</code></p><p>A comment</p><p><code>(?=...)</code></p><p>Matches if <code>...</code> matches next, but doesn’t consume any of the string. This is called a lookahead assertion.For example, <code>Isaac (?=Asimov)</code> will match <code>&#39;Isaac &#39;</code> only if it’s followed by <code>&#39;Asimov&#39;</code>.也就是说，这里的❓可以表示为占位符，假设等号后的内容紧随❓前的内容，则匹配，否则不匹配。可以称之为<strong>前置假设成立</strong>。</p><p><code>(?!...)</code></p><p>Matches if <code>...</code> doesn’t match next. This is a negative lookahead assertion. For example, <code>Isaac (?!Asimov)</code>will match <code>&#39;Isaac &#39;</code> only if it’s <em>not</em> followed by <code>&#39;Asimov&#39;</code>.（与上述的功能相反），可以称之为<strong>前置建设不成立</strong>。</p><p><code>(?&lt;=...)</code></p><p>Matches if the current position in the string is preceded by a match for <code>...</code> that ends at the current position. This is called a <em>positive lookbehind assertion</em>. <code>(?&lt;=abc)def</code> will find a match in <code>abcdef</code>可以称之为<strong>后置假设成立</strong>。参见<code>(?=...)</code>。The contained pattern must only match strings of some fixed length, meaning that <code>abc</code> or <code>a|b</code> are allowed, but <code>a*</code> and <code>a{3,4}</code> are not.（也就是说等号后的内容必须是固定长度，这一点与参考不同）</p><p><code>(?&lt;!...)</code></p><p>Matches if the current position in the string is not preceded by a match for <code>...</code>. This is called a <em>negative lookbehind assertion</em>.（称之为后置假设不成立）语法同上。</p><p><code>(?(id/name)yes-pattern|no-pattern)</code></p><p>Will try to match with yes-pattern if the group with given id or name exists, and with no-pattern if it doesn’t. no-pattern is optional and can be omitted. For example, <code>(&lt;)?(\w+@\w+(?:\.\w+)+)(?(1)&gt;|$)</code> is a poor email matching pattern, which will match with <code>&#39;&lt;user@host.com&gt;&#39;</code> as well as <code>&#39;user@host.com&#39;</code>, but not with <code>&#39;&lt;user@host.com&#39;</code> nor <code>&#39;user@host.com&gt;&#39;</code>.</p><hr><p>The special sequences consist of <code>&#39;\&#39;</code> and a character from the list below. If the ordinary character is not an ASCII digit or an ASCII letter, then the resulting RE will match the second character. For example, <code>\$</code> matches the character <code>&#39;$&#39;</code>.</p><p>即是说除了下面列举出来的，‘/’均为转义的意思（放在[]内的除外）</p><p><code>\number</code></p><p>Matches the contents of the group of the same number.</p><p><code>\A</code></p><p>Matches only at the <strong>start of the string</strong>.（可以表示为string前的空格），与’\Z’相反</p><p><code>\b</code></p><p>Matches the empty string, but only at the beginning or end of a word. A word is defined as a sequence of Unicode alphanumeric or underscore characters, so the end of a word is indicated by whitespace or a non-alphanumeric, non-underscore Unicode character. Note that formally, <code>\b</code> is defined as the boundary between a <code>\w</code> and a <code>\W</code> character (or vice versa), or between <code>\w</code> and the beginning/end of the string. This means that <code>r&#39;\bfoo\b&#39;</code> matches <code>&#39;foo&#39;</code>, <code>&#39;foo.&#39;</code>, <code>&#39;(foo)&#39;</code>, <code>&#39;bar foo baz&#39;</code> but not <code>&#39;foobar&#39;</code> or <code>&#39;foo3&#39;</code>.<strong>也就是说’\b’表示的是除去字母、整数、连字符、一个空格的集合中的单个元素</strong></p><p><code>\B</code></p><p>Matches the empty string, but only when it is <em>not</em> at the beginning or end of a word. This means that <code>r&#39;py\B&#39;</code>matches <code>&#39;python&#39;</code>, <code>&#39;py3&#39;</code>, <code>&#39;py2&#39;</code>, but not <code>&#39;py&#39;</code>, <code>&#39;py.&#39;</code>, or <code>&#39;py!&#39;</code>. <code>\B</code> is just the opposite of <code>\b</code>, 也就是说’\B’表示的是字母、整数、连字符、一个空格的集合中的单个元素。</p><p><code>\d</code></p><p>基本上可以认为匹配  <code>[0-9]</code>.</p><p><code>\D</code></p><p>与\d相反。</p><p><code>\s</code></p><p>基本上可以认为只匹配无字符输出的符号，如空格、换行、纵向制表符、横向制表符 ，即<code>[ \t\n\r\f\v]</code>。</p><p><code>\S</code></p><p>与上述相反<code>[^ \t\n\r\f\v]</code> 。</p><p><code>\w</code></p><p>基本可以理解为匹配：[a-zA-Z0-9_]。同’\b’,只是‘\b’用于界定，而’\w’用来匹配</p><p><code>\W</code></p><p>与上述相反：<code>[^a-zA-Z0-9_]</code> 。同’\B’,只是‘\B’用于界定，而’\W’用来匹配</p><p><code>\Z</code></p><p>Matches only at the end of the string. 与‘\A’相反。</p><hr><h2 id="Module-Contents"><a href="#Module-Contents" class="headerlink" title="Module Contents"></a>Module Contents</h2><p><code>re.compile(*pattern*, *flags=0*)</code></p><p>The sequence</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">prog = re.compile(pattern)</div><div class="line">result = prog.match(string)</div></pre></td></tr></table></figure><p>is equivalent to</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">result = re.match(pattern, string)</div></pre></td></tr></table></figure><p><code>re.A</code></p><p><code>re.ASCII</code></p><p>Make <code>\w</code>, <code>\W</code>, <code>\b</code>, <code>\B</code>, <code>\d</code>, <code>\D</code>, <code>\s</code> and <code>\S</code> perform ASCII-only matching.</p><p><code>re.DEBUG</code></p><p>Display debug information about compiled expression.</p><p><code>re.I</code></p><p><code>re.IGNORECASE</code></p><p><code>re.L</code></p><p><code>re.LOCALE</code></p><p><code>re.M</code></p><p><code>re.MULTILINE</code></p><p>When specified, the pattern character <code>&#39;^&#39;</code> matches at the beginning of the string and at the beginning of each line. and the pattern character <code>&#39;$&#39;</code> matches at the end of the string and at the end of each line.</p><p><code>re.S</code></p><p><code>re.DOTALL</code></p><p>Make the <code>&#39;.&#39;</code> special character match any character at all, including a newline; without this <strong>flag</strong>, <code>&#39;.&#39;</code> will match anything <em>except</em> a newline.</p><p><code>re.X</code></p><p><code>re.VERBOSE</code></p><p><code>re.search</code>(<em>pattern</em>, <em>string</em>, <em>flags=0</em>)</p><p>Scan through <em>string</em> looking for the first location where the regular expression <em>pattern</em> produces a match, and return a corresponding <a href="#match-objects">match object</a>.</p><p><code>re.match</code>(<em>pattern</em>, <em>string</em>, <em>flags=0</em>)</p><p>If zero or more characters at the beginning of <em>string</em> match the regular expression <em>pattern</em>, return a corresponding <a href="#match-objects">match object</a>.</p><p><code>re.fullmatch</code>(<em>pattern</em>, <em>string</em>, <em>flags=0</em>)</p><p>If the whole <em>string</em> matches the regular expression <em>pattern</em>, return a corresponding <a href="#match-objects">match object</a>.</p><p><code>re.split</code>(<em>pattern</em>, <em>string</em>, <em>maxsplit=0</em>, <em>flags=0</em>)</p><p>Split <em>string</em> by the occurrences of <em>pattern</em>. </p><p><code>re.findall</code>(<em>pattern</em>, <em>string</em>, <em>flags=0</em>)</p><p>Return all non-overlapping matches of <em>pattern</em> in <em>string</em>, as a list of strings.</p><p><code>re.finditer</code>(<em>pattern</em>, <em>string</em>, <em>flags=0</em>)</p><p>Return an <a href="../glossary.html#term-iterator">iterator</a> yielding <a href="#match-objects">match objects</a> over all non-overlapping matches for the RE <em>pattern</em> in <em>string</em>.</p><p><code>re.purge</code>()</p><p>Clear the regular expression cache.</p><h2 id="Regular-Expression-Objects"><a href="#Regular-Expression-Objects" class="headerlink" title="Regular Expression Objects"></a>Regular Expression Objects</h2><p><code>regex.search</code>(<em>string</em>[, <em>pos</em>[, <em>endpos</em>]]) </p><p><code>regex.match</code>(<em>string</em>[, <em>pos</em>[, <em>endpos</em>]]) </p><p><code>regex.fullmatch</code>(<em>string</em>[, <em>pos</em>[, <em>endpos</em>]]) </p><p><code>regex.split</code>(<em>string</em>, <em>maxsplit=0</em>) </p><p>Identical to the split() function, using the compiled pattern.</p><p><code>regex.findall</code>(<em>string</em>[, <em>pos</em>[, <em>endpos</em>]]) </p><p>Similar to the <a href="#re.findall"><code>findall()</code></a> function, using the compiled pattern</p><p><code>regex.finditer</code>(<em>string</em>[, <em>pos</em>[, <em>endpos</em>]]) </p><p>Similar to the <a href="#re.finditer"><code>finditer()</code></a> function, using the compiled pattern</p><p><code>regex.pattern</code> </p><p>The pattern string from which the RE object was compiled.</p><h2 id="Match-Objects"><a href="#Match-Objects" class="headerlink" title="Match Objects"></a>Match Objects</h2><p><code>match.expand</code>(<em>template</em>) </p><p><code>match.group</code>([<em>group1</em>, <em>…</em>]) </p><p>Returns one or more subgroups of the match. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(\w+) (\w+)"</span>, <span class="string">"Isaac Newton, physicist"</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">0</span>)       <span class="comment"># The entire match</span></div><div class="line"><span class="string">'Isaac Newton'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">1</span>)       <span class="comment"># The first parenthesized subgroup.</span></div><div class="line"><span class="string">'Isaac'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">2</span>)       <span class="comment"># The second parenthesized subgroup.</span></div><div class="line"><span class="string">'Newton'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">1</span>, <span class="number">2</span>)    <span class="comment"># Multiple arguments give us a tuple.</span></div><div class="line">(<span class="string">'Isaac'</span>, <span class="string">'Newton'</span>)</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(?P&lt;first_name&gt;\w+) (?P&lt;last_name&gt;\w+)"</span>, <span class="string">"Malcolm Reynolds"</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="string">'first_name'</span>)</div><div class="line"><span class="string">'Malcolm'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="string">'last_name'</span>)</div><div class="line"><span class="string">'Reynolds'</span></div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">1</span>)</div><div class="line"><span class="string">'Malcolm'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">2</span>)</div><div class="line"><span class="string">'Reynolds'</span></div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(..)+"</span>, <span class="string">"a1b2c3"</span>)  <span class="comment"># Matches 3 times.贪婪型，匹配三个字符。</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">1</span>)                        <span class="comment"># Returns only the last match.</span></div><div class="line"><span class="string">'c3'</span></div></pre></td></tr></table></figure><p><code>match.__getitem__</code>(<em>g</em>) </p><p>This is identical to <code>m.group(g)</code>. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(\w+) (\w+)"</span>, <span class="string">"Isaac Newton, physicist"</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m[<span class="number">0</span>]       <span class="comment"># The entire match</span></div><div class="line"><span class="string">'Isaac Newton'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m[<span class="number">1</span>]       <span class="comment"># The first parenthesized subgroup.</span></div><div class="line"><span class="string">'Isaac'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m[<span class="number">2</span>]       <span class="comment"># The second parenthesized subgroup.</span></div><div class="line"><span class="string">'Newton'</span></div></pre></td></tr></table></figure><p><code>match.groups</code>(<strong><em>default=None</em></strong>) </p><p>Return a tuple containing all the subgroups of the match, from 1 up to however many groups are in the pattern. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(\d+)\.(\d+)"</span>, <span class="string">"24.1632"</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.groups()</div><div class="line">(<span class="string">'24'</span>, <span class="string">'1632'</span>)</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(\d+)\.?(\d+)?"</span>, <span class="string">"24"</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.groups()      <span class="comment"># Second group defaults to None.</span></div><div class="line">(<span class="string">'24'</span>, <span class="keyword">None</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.groups(<span class="string">'0'</span>)   <span class="comment"># Now, the second group defaults to '0'.</span></div><div class="line">(<span class="string">'24'</span>, <span class="string">'0'</span>)</div></pre></td></tr></table></figure><p><code>match.groupdict</code>(<em>default=None</em>) </p><p>Return a dictionary containing all the <em>named</em> subgroups of the match, keyed by the subgroup name. </p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.match(<span class="string">r"(?P&lt;first_name&gt;\w+) (?P&lt;last_name&gt;\w+)"</span>, <span class="string">"Malcolm Reynolds"</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>m.groupdict()</div><div class="line">&#123;<span class="string">'first_name'</span>: <span class="string">'Malcolm'</span>, <span class="string">'last_name'</span>: <span class="string">'Reynolds'</span>&#125;</div></pre></td></tr></table></figure><p><code>match.start</code>([<em>group</em>])</p><p><code>match.end</code>([<em>group</em>]) </p><p>Return the indices of the start and end of the substring matched by <em>group</em>; <em>group</em> defaults to zero (meaning the whole matched substring). Return <code>-1</code> if <em>group</em> exists but did not contribute to the match.</p><p><code>match.span</code>([<em>group</em>]) </p><p>For a match <em>m</em>, return the 2-tuple <code>(m.start(group), m.end(group))</code>. </p><p><code>match.pos</code> </p><p>The value of <em>pos</em> which was passed to the <a href="#re.regex.search"><code>search()</code></a> or <a href="#re.regex.match"><code>match()</code></a> method of a <a href="#re-objects">regex object</a>. </p><p><code>match.endpos</code> </p><p><code>match.lastindex</code> </p><p><code>match.lastgroup</code> </p><p><code>match.re</code> </p><p>The regular expression object whose match() or search() method produced this match instance.</p><p><code>match.string</code> </p><p>The string passed to match() or search().</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;&amp;#39;.&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Dot.) 表示除换行符意外的所有符号。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;#39;$&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;本质上来说，代表换行符，为本行的换行符。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;#39;^&amp;#39
      
    
    </summary>
    
    
      <category term="Regular Expression" scheme="http://yoursite.com/tags/Regular-Expression/"/>
    
  </entry>
  
  <entry>
    <title>String Format Syntax</title>
    <link href="http://yoursite.com/2018/01/08/String-format-syntax/"/>
    <id>http://yoursite.com/2018/01/08/String-format-syntax/</id>
    <published>2018-01-08T06:43:23.000Z</published>
    <updated>2018-01-08T07:31:38.116Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">replacement_field ::=  “&#123;” [field_name] [“!” conversion] [“:” format_spec] “&#125;”</div><div class="line">field_name        ::=  arg_name (“.” attribute_name | “[” element_index “]”)*</div><div class="line">arg_name          ::=  [identifier | integer]</div><div class="line">attribute_name    ::=  identifier</div><div class="line">element_index     ::=  integer | index_string</div><div class="line">index_string      ::=  &lt;any source character <span class="keyword">except</span> “]”&gt; +</div><div class="line">conversion        ::=  “r” | “s” | “a”</div><div class="line">format_spec       ::=  &lt;described <span class="keyword">in</span> the next section&gt;</div></pre></td></tr></table></figure><p><em>field_name</em> that specifies the object whose value is to be formatted and inserted into the output instead of the replacement field. The <em>field_name</em> is optionally followed by a  <em>conversion</em> field, which is preceded by an exclamation point <code>&#39;!&#39;</code>, and a <em>format_spec</em>, which is preceded by a colon <code>&#39;:&#39;</code>. They are all optional.</p><p>Three conversion flags are currently supported: <code>&#39;!s&#39;</code> which calls <a href="stdtypes.html#str"><code>str()</code></a> on the value, <code>&#39;!r&#39;</code> which calls <a href="functions.html#repr"><code>repr()</code></a> and <code>&#39;!a&#39;</code> which calls <a href="functions.html#ascii"><code>ascii()</code></a>.目的是进行类型转换。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">format_spec     ::=  [[fill]align][sign][<span class="comment">#][0][width][grouping_option][.precision][type]</span></div><div class="line">fill            ::=  &lt;any character&gt;</div><div class="line">align           ::=  “&lt;” | “&gt;” | “=” | “^”</div><div class="line">sign            ::=  “+” | “-” | ” “</div><div class="line">width           ::=  integer</div><div class="line">grouping_option ::=  “_” | “,”</div><div class="line">precision       ::=  integer</div><div class="line">type            ::=  “b” | “c” | “d” | “e” | “E” | “f” | “F” | “g” | “G” | “n” | “o” | “s” | “x” |</div></pre></td></tr></table></figure><p>The meaning of the various <strong>align</strong> options is as follows:</p><table><thead><tr><th>Option</th><th>Meaning</th></tr></thead><tbody><tr><td><code>&#39;&lt;&#39;</code></td><td>左对齐，除数字外，对大多数对象默认</td></tr><tr><td><code>&#39;&gt;&#39;</code></td><td>右对齐，对数字默认</td></tr><tr><td><code>&#39;=&#39;</code></td><td>用等号之后的符号（不指定的话默认为‘0’）来填补数字正负号之后和数字之前的空格（此符号只适用于数字，比如 +000000120）</td></tr><tr><td><code>&#39;^&#39;</code></td><td>居中</td></tr></tbody></table><p>The <strong><em>sign</em></strong> option is only valid for number types, and can be one of the following:</p><table><thead><tr><th>Option</th><th>Meaning</th></tr></thead><tbody><tr><td><code>&#39;+&#39;</code></td><td>正负数均需要有正负号表示</td></tr><tr><td><code>&#39;-&#39;</code></td><td>如果不是负数则无需添加前置符号（默认）</td></tr><tr><td>space</td><td>表示正数的前面加空格，负数的前面加负号</td></tr></tbody></table><p>The <code>&#39;#&#39;</code> option  is only valid for integer, float, complex and Decimal types. For integers, when binary, octal, or hexadecimal output is used, this option adds the prefix respective ‘0b’, ‘0o’, or ‘0x’ to the output value.<code>也就是说，对于二进制、八进制、十六进制的数字打印出来时会在前面加上对应的进制类型</code>  。For floats, complex and Decimal the alternate form causes the result of the conversion to always contain a decimal-point character, even if no digits follow it.<code>换句话说就是强制添加小数点，无论是否有小数</code>。</p><p>The <code>&#39;,&#39;</code> option signals the use of a comma for a thousands separator.也就是千位分隔符。</p><p>The <code>&#39;_&#39;</code> option signals the use of an underscore for a thousands separator.类似于千位分隔符，不过将逗号换为了连字符。有其他功能，但不常用。</p><p><strong><em>width</em></strong> is a decimal integer defining the minimum field width. If not specified, then the field width will be determined by the content.</p><p>The <strong><em>precision</em></strong> is a decimal number indicating how many digits should be displayed after the decimal point for a floating point value.用小数点后的数字表示小数点后的精度。</p><hr><p>The <strong><em>type</em></strong> determines how the data should be presented.</p><p>The available <code>string</code> presentation types are:</p><table><thead><tr><th>Type</th><th>Meaning</th></tr></thead><tbody><tr><td><code>&#39;s&#39;</code></td><td>String format. This is the default type for strings and may be omitted.</td></tr><tr><td>None</td><td>The same as <code>&#39;s&#39;</code>.</td></tr></tbody></table><p> The available <code>integer</code> presentation types are:</p><blockquote><table><thead><tr><th>Type</th><th>Meaning</th></tr></thead><tbody><tr><td><code>&#39;b&#39;</code></td><td>Binary format. Outputs the number in base 2.</td></tr><tr><td><code>&#39;c&#39;</code></td><td>Character. Converts the integer to the corresponding unicode character before printing.</td></tr><tr><td><code>&#39;d&#39;</code></td><td>Decimal Integer. Outputs the number in base 10.</td></tr><tr><td><code>&#39;o&#39;</code></td><td>Octal format. Outputs the number in base 8.</td></tr><tr><td><code>&#39;x&#39;</code></td><td>Hex format. Outputs the number in base 16, using lower- case letters for the digits above 9.</td></tr><tr><td><code>&#39;X&#39;</code></td><td>Hex format. Outputs the number in base 16, using upper- case letters for the digits above 9.</td></tr><tr><td><code>&#39;n&#39;</code></td><td>Number. This is the same as <code>&#39;d&#39;</code>, except that it uses the current locale setting to insert the appropriate number separator characters.</td></tr><tr><td>None</td><td>The same as <code>&#39;d&#39;</code>.</td></tr></tbody></table></blockquote><p>The available presentation types for <code>floating point and decimal values</code> are:</p><table><thead><tr><th><code>&#39;e&#39;</code></th><th>Exponent notation. Prints the number in scientific notation using the letter ‘e’ to indicate the exponent. The default precision is <code>6</code>.</th></tr></thead><tbody><tr><td><code>&#39;E&#39;</code></td><td>Exponent notation. Same as <code>&#39;e&#39;</code> except it uses an upper case ‘E’ as the separator character.</td></tr><tr><td><code>&#39;f&#39;</code></td><td>Fixed point. Displays the number as a fixed-point number. The default precision is <code>6</code>.</td></tr><tr><td><code>&#39;F&#39;</code></td><td>Fixed point. Same as <code>&#39;f&#39;</code>, but converts <code>nan</code> to <code>NAN</code> and <code>inf</code> to <code>INF</code>.</td></tr><tr><td><code>&#39;g&#39;</code></td><td>General format. For a given precision <code>p &gt;= 1</code>, this rounds the number to <code>p</code> significant digits and then formats the result in either fixed-point format or in scientific notation, depending on its magnitude.The precise rules are as follows: suppose that the result formatted with presentation type <code>&#39;e&#39;</code> and precision <code>p-1</code> would have exponent <code>exp</code>. Then if <code>-4 &lt;= exp &lt; p</code>, the number is formatted with presentation type <code>&#39;f&#39;</code> and precision <code>p-1-exp</code>. Otherwise, the number is formatted with presentation type <code>&#39;e&#39;</code> and precision <code>p-1</code>. In both cases insignificant trailing zeros are removed from the significand, and the decimal point is also removed if there are no remaining digits following it.Positive and negative infinity, positive and negative zero, and nans, are formatted as <code>inf</code>, <code>-inf</code>, <code>0</code>, <code>-0</code> and <code>nan</code> respectively, regardless of the precision.A precision of <code>0</code> is treated as equivalent to a precision of <code>1</code>. The default precision is <code>6</code>.</td></tr><tr><td><code>&#39;G&#39;</code></td><td>General format. Same as <code>&#39;g&#39;</code> except switches to <code>&#39;E&#39;</code> if the number gets too large. The representations of infinity and NaN are uppercased, too.</td></tr><tr><td><code>&#39;n&#39;</code></td><td>Number. This is the same as <code>&#39;g&#39;</code>, except that it uses the current locale setting to insert the appropriate number separator characters.</td></tr><tr><td><code>&#39;%&#39;</code></td><td>Percentage. Multiplies the number by 100 and displays in fixed (<code>&#39;f&#39;</code>) format, followed by a percent sign.</td></tr><tr><td>None</td><td>Similar to <code>&#39;g&#39;</code>, except that fixed-point notation, when used, has at least one digit past the decimal point. The default precision is as high as needed to represent the particular value. The overall effect is to match the output of <a href="stdtypes.html#str"><code>str()</code></a> as altered by the other format modifiers.</td></tr></tbody></table><hr><h3 id="Format-examples"><a href="#Format-examples" class="headerlink" title="Format examples"></a>Format examples</h3><p>This section contains examples of the <a href="stdtypes.html#str.format"><code>str.format()</code></a> syntax and comparison with the old <code>%</code>-formatting.</p><p>In most of the cases the syntax is similar to the old <code>%</code>-formatting, with the addition of the <code>{}</code> and with <code>:</code> used instead of <code>%</code>. For example, <code>&#39;%03.2f&#39;</code> can be translated to <code>&#39;{:03.2f}&#39;</code>.</p><p>The new format syntax also supports new and different options, shown in the follow examples.</p><p>Accessing arguments by position:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0&#125;, &#123;1&#125;, &#123;2&#125;'</span>.format(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</div><div class="line"><span class="string">'a, b, c'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;&#125;, &#123;&#125;, &#123;&#125;'</span>.format(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)  <span class="comment"># 3.1+ only</span></div><div class="line"><span class="string">'a, b, c'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;2&#125;, &#123;1&#125;, &#123;0&#125;'</span>.format(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>)</div><div class="line"><span class="string">'c, b, a'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;2&#125;, &#123;1&#125;, &#123;0&#125;'</span>.format(*<span class="string">'abc'</span>)      <span class="comment"># unpacking argument sequence（*号相当于list）</span></div><div class="line"><span class="string">'c, b, a'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;0&#125;&#123;1&#125;&#123;0&#125;'</span>.format(<span class="string">'abra'</span>, <span class="string">'cad'</span>)   <span class="comment"># arguments' indices can be repeated</span></div><div class="line"><span class="string">'abracadabra'</span></div></pre></td></tr></table></figure><p>Accessing arguments by name:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Coordinates: &#123;latitude&#125;, &#123;longitude&#125;'</span>.format(latitude=<span class="string">'37.24N'</span>, longitude=<span class="string">'-115.81W'</span>)</div><div class="line"><span class="string">'Coordinates: 37.24N, -115.81W'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coord = &#123;<span class="string">'latitude'</span>: <span class="string">'37.24N'</span>, <span class="string">'longitude'</span>: <span class="string">'-115.81W'</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Coordinates: &#123;latitude&#125;, &#123;longitude&#125;'</span>.format(**coord)</div><div class="line"><span class="string">'Coordinates: 37.24N, -115.81W'</span></div></pre></td></tr></table></figure><p>Accessing arguments’ attributes:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>c = <span class="number">3</span><span class="number">-5j</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="string">'The complex number &#123;0&#125; is formed from the real part &#123;0.real&#125; '</span></div><div class="line"><span class="meta">... </span> <span class="string">'and the imaginary part &#123;0.imag&#125;.'</span>).format(c)</div><div class="line"><span class="string">'The complex number (3-5j) is formed from the real part 3.0 and the imaginary part -5.0.'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Point</span>:</span></div><div class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y)</span>:</span></div><div class="line"><span class="meta">... </span>        self.x, self.y = x, y</div><div class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="string">'Point(&#123;self.x&#125;, &#123;self.y&#125;)'</span>.format(self=self)</div><div class="line">...</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>str(Point(<span class="number">4</span>, <span class="number">2</span>))</div><div class="line"><span class="string">'Point(4, 2)'</span></div></pre></td></tr></table></figure><p>Accessing arguments’ items:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>coord = (<span class="number">3</span>, <span class="number">5</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'X: &#123;0[0]&#125;;  Y: &#123;0[1]&#125;'</span>.format(coord)</div><div class="line"><span class="string">'X: 3;  Y: 5'</span></div></pre></td></tr></table></figure><p>Replacing <code>%s</code> and <code>%r</code>:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"repr() shows quotes: &#123;!r&#125;; str() doesn't: &#123;!s&#125;"</span>.format(<span class="string">'test1'</span>, <span class="string">'test2'</span>)</div><div class="line"><span class="string">"repr() shows quotes: 'test1'; str() doesn't: test2"</span></div></pre></td></tr></table></figure><p>Aligning the text and specifying a width:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:&lt;30&#125;'</span>.format(<span class="string">'left aligned'</span>)</div><div class="line"><span class="string">'left aligned                  '</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:&gt;30&#125;'</span>.format(<span class="string">'right aligned'</span>)</div><div class="line"><span class="string">'                 right aligned'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:^30&#125;'</span>.format(<span class="string">'centered'</span>)</div><div class="line"><span class="string">'           centered           '</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:*^30&#125;'</span>.format(<span class="string">'centered'</span>)  <span class="comment"># use '*' as a fill char</span></div><div class="line"><span class="string">'***********centered***********'</span></div></pre></td></tr></table></figure><p>Replacing <code>%+f</code>, <code>%-f</code>, and <code>% f</code> and specifying a sign:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:+f&#125;; &#123;:+f&#125;'</span>.format(<span class="number">3.14</span>, <span class="number">-3.14</span>)  <span class="comment"># show it always</span></div><div class="line"><span class="string">'+3.140000; -3.140000'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;: f&#125;; &#123;: f&#125;'</span>.format(<span class="number">3.14</span>, <span class="number">-3.14</span>)  <span class="comment"># show a space for positive numbers</span></div><div class="line"><span class="string">' 3.140000; -3.140000'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:-f&#125;; &#123;:-f&#125;'</span>.format(<span class="number">3.14</span>, <span class="number">-3.14</span>)  <span class="comment"># show only the minus -- same as '&#123;:f&#125;; &#123;:f&#125;'</span></div><div class="line"><span class="string">'3.140000; -3.140000'</span></div></pre></td></tr></table></figure><p>Replacing <code>%x</code> and <code>%o</code> and converting the value to different bases:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># format also supports binary numbers</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"int: &#123;0:d&#125;;  hex: &#123;0:x&#125;;  oct: &#123;0:o&#125;;  bin: &#123;0:b&#125;"</span>.format(<span class="number">42</span>)</div><div class="line"><span class="string">'int: 42;  hex: 2a;  oct: 52;  bin: 101010'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># with 0x, 0o, or 0b as prefix:</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">"int: &#123;0:d&#125;;  hex: &#123;0:#x&#125;;  oct: &#123;0:#o&#125;;  bin: &#123;0:#b&#125;"</span>.format(<span class="number">42</span>)</div><div class="line"><span class="string">'int: 42;  hex: 0x2a;  oct: 0o52;  bin: 0b101010'</span></div></pre></td></tr></table></figure><p>Using the comma as a thousands separator:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:,&#125;'</span>.format(<span class="number">1234567890</span>)</div><div class="line"><span class="string">'1,234,567,890'</span></div></pre></td></tr></table></figure><p>Expressing a percentage:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>points = <span class="number">19</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>total = <span class="number">22</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Correct answers: &#123;:.2%&#125;'</span>.format(points/total)</div><div class="line"><span class="string">'Correct answers: 86.36%'</span></div></pre></td></tr></table></figure><p>Using type-specific formatting:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> datetime</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>d = datetime.datetime(<span class="number">2010</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">58</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:%Y-%m-%d %H:%M:%S&#125;'</span>.format(d)</div><div class="line"><span class="string">'2010-07-04 12:15:58'</span></div></pre></td></tr></table></figure><p>Nesting arguments and more complex examples:</p><p>>&gt;&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> align, text <span class="keyword">in</span> zip(<span class="string">'&lt;^&gt;'</span>, [<span class="string">'left'</span>, <span class="string">'center'</span>, <span class="string">'right'</span>]):</div><div class="line"><span class="meta">... </span>    <span class="string">'&#123;0:&#123;fill&#125;&#123;align&#125;16&#125;'</span>.format(text, fill=align, align=align)</div><div class="line">...</div><div class="line"><span class="string">'left&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;'</span></div><div class="line"><span class="string">'^^^^^center^^^^^'</span></div><div class="line"><span class="string">'&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;right'</span></div><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>octets = [<span class="number">192</span>, <span class="number">168</span>, <span class="number">0</span>, <span class="number">1</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'&#123;:02X&#125;&#123;:02X&#125;&#123;:02X&#125;&#123;:02X&#125;'</span>.format(*octets)</div><div class="line"><span class="string">'C0A80001'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>int(_, <span class="number">16</span>)</div><div class="line"><span class="number">3232235521</span></div><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>width = <span class="number">5</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">5</span>,<span class="number">12</span>): </div><div class="line"><span class="meta">... </span>    <span class="keyword">for</span> base <span class="keyword">in</span> <span class="string">'dXob'</span>:</div><div class="line"><span class="meta">... </span>        print(<span class="string">'&#123;0:&#123;width&#125;&#123;base&#125;&#125;'</span>.format(num, base=base, width=width), end=<span class="string">' '</span>)</div><div class="line"><span class="meta">... </span>    print()</div><div class="line">...</div><div class="line">    <span class="number">5</span>     <span class="number">5</span>     <span class="number">5</span>   <span class="number">101</span></div><div class="line">    <span class="number">6</span>     <span class="number">6</span>     <span class="number">6</span>   <span class="number">110</span></div><div class="line">    <span class="number">7</span>     <span class="number">7</span>     <span class="number">7</span>   <span class="number">111</span></div><div class="line">    <span class="number">8</span>     <span class="number">8</span>    <span class="number">10</span>  <span class="number">1000</span></div><div class="line">    <span class="number">9</span>     <span class="number">9</span>    <span class="number">11</span>  <span class="number">1001</span></div><div class="line">   <span class="number">10</span>     A    <span class="number">12</span>  <span class="number">1010</span></div><div class="line">   <span class="number">11</span>     B    <span class="number">13</span>  <span class="number">1011</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/d
      
    
    </summary>
    
    
      <category term="Python, String syntax" scheme="http://yoursite.com/tags/Python-String-syntax/"/>
    
  </entry>
  
  <entry>
    <title>Learning Http</title>
    <link href="http://yoursite.com/2018/01/05/learning-http/"/>
    <id>http://yoursite.com/2018/01/05/learning-http/</id>
    <published>2018-01-05T14:43:40.000Z</published>
    <updated>2018-01-05T17:17:02.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Request       = Request-Line              </div><div class="line">                        *(( general-header        </div><div class="line">                         | request-header         </div><div class="line">                         | entity-header ) CRLF)  </div><div class="line">                        CRLF</div><div class="line">                        [ message-body ]</div></pre></td></tr></table></figure><h4 id="Request-Line"><a href="#Request-Line" class="headerlink" title="Request-Line"></a>Request-Line</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Request-Line   = Method SP Request-URI SP HTTP-Version CRLF</div></pre></td></tr></table></figure><h4 id="Method"><a href="#Method" class="headerlink" title="Method"></a>Method</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Method         = &quot;OPTIONS&quot;                </div><div class="line">                      | &quot;GET&quot;             </div><div class="line">                      | &quot;HEAD&quot;            </div><div class="line">                      | &quot;POST&quot;            </div><div class="line">                      | &quot;PUT&quot;             </div><div class="line">                      | &quot;DELETE&quot;          </div><div class="line">                      | &quot;TRACE&quot;           </div><div class="line">                      | &quot;CONNECT&quot;         </div><div class="line">                      | extension-method</div><div class="line">       extension-method = token</div></pre></td></tr></table></figure><h4 id="Request-URI"><a href="#Request-URI" class="headerlink" title="Request-URI"></a>Request-URI</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Request-URI    = &quot;*&quot; | absoluteURI | abs_path | authority</div></pre></td></tr></table></figure><p>例子：GET <a href="http://www.w3.org/pub/WWW/TheProject.html" target="_blank" rel="external">http://www.w3.org/pub/WWW/TheProject.html</a> HTTP/1.1</p><h4 id="Request-Header-Fields"><a href="#Request-Header-Fields" class="headerlink" title="Request Header Fields"></a>Request Header Fields</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">request-header = Accept                   </div><div class="line">                     | Accept-Charset     </div><div class="line">                     | Accept-Encoding    </div><div class="line">                     | Accept-Language    </div><div class="line">                     | Authorization      </div><div class="line">                     | Expect             </div><div class="line">                     | From               </div><div class="line">                     | Host               </div><div class="line">                     | If-Match           </div><div class="line">                      | If-Modified-Since </div><div class="line">                     | If-None-Match      </div><div class="line">                     | If-Range           </div><div class="line">                     | If-Unmodified-Since</div><div class="line">                     | Max-Forwards       </div><div class="line">                     | Proxy-Authorization</div><div class="line">                     | Range              </div><div class="line">                     | Referer            </div><div class="line">                     | TE                 </div><div class="line">                     | User-Agent</div></pre></td></tr></table></figure><h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Response      = Status-Line               ;</div><div class="line">                       *(( general-header        </div><div class="line">                        | response-header        </div><div class="line">                        | entity-header ) CRLF)  </div><div class="line">                       CRLF</div><div class="line">                       [ message-body ]</div></pre></td></tr></table></figure><h4 id="Status-Line"><a href="#Status-Line" class="headerlink" title="Status-Line"></a>Status-Line</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF</div></pre></td></tr></table></figure><h4 id="Status-Code-and-Reason-Phrase"><a href="#Status-Code-and-Reason-Phrase" class="headerlink" title="Status Code and Reason Phrase"></a>Status Code and Reason Phrase</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- 1xx: Informational - Request received, continuing process</div><div class="line"></div><div class="line">- 2xx: Success - The action was successfully received,</div><div class="line">understood, and accepted</div><div class="line"></div><div class="line">- 3xx: Redirection - Further action must be taken in order to</div><div class="line">complete the request</div><div class="line"></div><div class="line">- 4xx: Client Error - The request contains bad syntax or cannot</div><div class="line">be fulfilled</div><div class="line"></div><div class="line">- 5xx: Server Error - The server failed to fulfill an apparently</div><div class="line">valid request</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">Status-Code    =</div><div class="line">          | &quot;100&quot;  ; Continue</div><div class="line">          | &quot;101&quot;  ; Switching Protocols</div><div class="line">          | &quot;200&quot;  ; OK</div><div class="line">          | &quot;201&quot;  ; Created</div><div class="line">          | &quot;202&quot;  ; Accepted</div><div class="line">          | &quot;203&quot;  ; Non-Authoritative Information</div><div class="line">          | &quot;204&quot;  ; No Content</div><div class="line">          | &quot;205&quot;  ; Reset Content</div><div class="line">          | &quot;206&quot;  ; Partial Content</div><div class="line">          | &quot;300&quot;  ; Multiple Choices</div><div class="line">          | &quot;301&quot;  ; Moved Permanently</div><div class="line">          | &quot;302&quot;  ; Found</div><div class="line">          | &quot;303&quot;  ; See Other</div><div class="line">          | &quot;304&quot;  ; Not Modified</div><div class="line">          | &quot;305&quot;  ; Use Proxy</div><div class="line">          | &quot;307&quot;  ; Temporary Redirect</div><div class="line">          | &quot;400&quot;  ; Bad Request</div><div class="line">          | &quot;401&quot;  ; Unauthorized</div><div class="line">          | &quot;402&quot;  ; Payment Required</div><div class="line">          | &quot;403&quot;  ; Forbidden</div><div class="line">          | &quot;404&quot;  ; Not Found</div><div class="line">          | &quot;405&quot;  ; Method Not Allowed</div><div class="line">          | &quot;406&quot;  ; Not Acceptable</div><div class="line">          | &quot;407&quot;  ; Proxy Authentication Required</div><div class="line">          | &quot;408&quot;  ; Request Time-out</div><div class="line">          | &quot;409&quot;  ;: Conflict</div><div class="line">          | &quot;410&quot;  ;: Gone</div><div class="line">          | &quot;411&quot;  ;: Length Required</div><div class="line">          | &quot;412&quot;  ;: Precondition Failed</div><div class="line">          | &quot;413&quot;  ;: Request Entity Too Large</div><div class="line">          | &quot;414&quot;  ;: Request-URI Too Large</div><div class="line">          | &quot;415&quot;  ;: Unsupported Media Type</div><div class="line">          | &quot;416&quot;  ;: Requested range not satisfiable</div><div class="line">          | &quot;417&quot;  ;: Expectation Failed</div><div class="line">          | &quot;500&quot;  ; Internal Server Error</div><div class="line">          | &quot;501&quot;  ; Not Implemented</div><div class="line">          | &quot;502&quot;  ; Bad Gateway</div><div class="line">          | &quot;503&quot;  ; Service Unavailable</div><div class="line">          | &quot;504&quot;  ; Gateway Time-out</div><div class="line">          | &quot;505&quot;  ; HTTP Version not supported</div><div class="line">          | extension-code</div></pre></td></tr></table></figure><h4 id="Response-Header-Fields"><a href="#Response-Header-Fields" class="headerlink" title="Response Header Fields"></a>Response Header Fields</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">response-header = Accept-Ranges           </div><div class="line">                       | Age              </div><div class="line">                       | ETag             </div><div class="line">                       | Location         </div><div class="line">                       | Proxy-Authenticate</div><div class="line">                       | Retry-After      </div><div class="line">                       | Server           </div><div class="line">                       | Vary             </div><div class="line">                       | WWW-Authenticate</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Request&quot;&gt;&lt;a href=&quot;#Request&quot; class=&quot;headerlink&quot; title=&quot;Request&quot;&gt;&lt;/a&gt;Request&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
      <category term="http" scheme="http://yoursite.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Xpath Cheatsheet</title>
    <link href="http://yoursite.com/2018/01/02/Xpath-Cheatsheet/"/>
    <id>http://yoursite.com/2018/01/02/Xpath-Cheatsheet/</id>
    <published>2018-01-02T03:46:51.000Z</published>
    <updated>2018-01-02T03:49:01.902Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Xpath-test-bed-链接地址"><a href="#Xpath-test-bed-链接地址" class="headerlink" title="Xpath test bed(链接地址)"></a>Xpath test bed(<a href="https://devhints.io/xpath#axes" target="_blank" rel="external">链接地址</a>)</h3><p>Test queries in the Xpath test bed:<br><a href="http://www.whitebeam.org/library/guide/TechNotes/xpathtestbed.rhtm" target="_blank" rel="external">Xpath test bed</a> <em>(whitebeam.org)</em></p><h3 id="Browser-console"><a href="#Browser-console" class="headerlink" title="Browser console"></a>Browser console</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$x(&apos;//div&apos;)</div></pre></td></tr></table></figure><p>Works in Firefox and Chrome.</p><h2 id="Selectors"><a href="#Selectors" class="headerlink" title="Selectors"></a>Selectors</h2><h3 id="Descendant-selectors"><a href="#Descendant-selectors" class="headerlink" title="Descendant selectors"></a>Descendant selectors</h3><table><thead><tr><th><code>h1</code></th><th><code>//h1</code></th><th><a href="https://devhints.io/xpath#prefixes" target="_blank" rel="external">?</a></th></tr></thead><tbody><tr><td><code>div p</code></td><td><code>//div//p</code></td><td><a href="https://devhints.io/xpath#axes" target="_blank" rel="external">?</a></td></tr><tr><td><code>ul &gt; li</code></td><td><code>//ul/li</code></td><td><a href="https://devhints.io/xpath#axes" target="_blank" rel="external">?</a></td></tr><tr><td><code>ul &gt; li &gt; a</code></td><td><code>//ul/li/a</code></td><td></td></tr><tr><td><code>div &gt; *</code></td><td><code>//div/*</code></td><td></td></tr><tr><td><code>:root</code></td><td><code>/</code></td><td><a href="https://devhints.io/xpath#prefixes" target="_blank" rel="external">?</a></td></tr><tr><td><code>:root &gt; body</code></td><td><code>/body</code></td></tr></tbody></table><h3 id="Attribute-selectors"><a href="#Attribute-selectors" class="headerlink" title="Attribute selectors"></a>Attribute selectors</h3><table><thead><tr><th><code>#id</code></th><th><code>//[@id=&quot;id&quot;]</code></th><th><a href="https://devhints.io/xpath#predicates" target="_blank" rel="external">?</a></th></tr></thead><tbody><tr><td><code>.class</code></td><td><code>//[@class=&quot;class&quot;]</code> <em>…kinda</em></td><td></td></tr><tr><td><code>input[type=&quot;submit&quot;]</code></td><td><code>//input[@type=&quot;submit&quot;]</code></td><td></td></tr><tr><td><code>a#abc[for=&quot;xyz&quot;]</code></td><td><code>//a[@id=&quot;abc&quot;][@for=&quot;xyz&quot;]</code></td><td><a href="https://devhints.io/xpath#chaining-order" target="_blank" rel="external">?</a></td></tr><tr><td><code>a[rel]</code></td><td><code>//a[@rel]</code></td><td></td></tr><tr><td><code>a[href^=&#39;/&#39;]</code></td><td><code>//a[starts-with(@href, &#39;/&#39;)]</code></td><td><a href="https://devhints.io/xpath#string-functions" target="_blank" rel="external">?</a></td></tr><tr><td><code>a[href$=&#39;pdf&#39;]</code></td><td><code>//a[ends-with(@href, &#39;.pdf&#39;)]</code></td><td></td></tr><tr><td><code>a[href~=&#39;://&#39;]</code></td><td><code>//a[contains(@href, &#39;://&#39;)]</code> <em>…kinda</em></td></tr></tbody></table><h3 id="Order-selectors"><a href="#Order-selectors" class="headerlink" title="Order selectors"></a>Order selectors</h3><table><thead><tr><th><code>ul &gt; li:first-child</code></th><th><code>//ul/li[1]</code></th><th><a href="https://devhints.io/xpath#indexing" target="_blank" rel="external">?</a></th></tr></thead><tbody><tr><td><code>ul &gt; li:nth-child(2)</code></td><td><code>//ul/li[2]</code></td><td></td></tr><tr><td><code>ul &gt; li:last-child</code></td><td><code>//ul/li[last()]</code></td><td></td></tr><tr><td><code>li#id:first-child</code></td><td><code>//li[@id=&quot;id&quot;][1]</code></td><td></td></tr><tr><td><code>a:first-child</code></td><td><code>//a[1]</code></td><td></td></tr><tr><td><code>a:last-child</code></td><td><code>//a[last()]</code></td></tr></tbody></table><h3 id="Siblings"><a href="#Siblings" class="headerlink" title="Siblings"></a>Siblings</h3><table><thead><tr><th><code>h1 ~ ul</code></th><th><code>//h1/following-sibling::ul</code></th><th><a href="https://devhints.io/xpath#using-axes" target="_blank" rel="external">?</a></th></tr></thead><tbody><tr><td><code>h1 + ul</code></td><td><code>//h1/following-sibling::ul[1]</code></td><td></td></tr><tr><td><code>h1 ~ #id</code></td><td><code>//h1/following-sibling::[@id=&quot;id&quot;]</code></td></tr></tbody></table><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><table><thead><tr><th><code>$(&#39;ul &gt; li&#39;).parent()</code></th><th><code>//ul/li/..</code></th><th><a href="https://devhints.io/xpath#other-axes" target="_blank" rel="external">?</a></th></tr></thead><tbody><tr><td><code>$(&#39;li&#39;).closest(&#39;section&#39;)</code></td><td><code>//li/ancestor-or-self::section</code></td><td></td></tr><tr><td><code>$(&#39;a&#39;).attr(&#39;href&#39;)</code></td><td><code>//a/@href</code></td><td><a href="https://devhints.io/xpath#steps" target="_blank" rel="external">?</a></td></tr><tr><td><code>$(&#39;span&#39;).text()</code></td><td><code>//span/text()</code></td></tr></tbody></table><h3 id="Other-things"><a href="#Other-things" class="headerlink" title="Other things"></a>Other things</h3><table><thead><tr><th><code>h1:not([id])</code></th><th><code>//h1[not(@id)]</code></th><th><a href="https://devhints.io/xpath#boolean-functions" target="_blank" rel="external">?</a></th></tr></thead><tbody><tr><td>Text match</td><td><code>//button[text()=&quot;Submit&quot;]</code></td><td><a href="https://devhints.io/xpath#operators" target="_blank" rel="external">?</a></td></tr><tr><td>Text match (substring)</td><td><code>//button[contains(text(),&quot;Go&quot;)]</code></td><td></td></tr><tr><td>Arithmetic</td><td><code>//product[@price &gt; 2.50]</code></td><td></td></tr><tr><td>Has children</td><td><code>//ul[*]</code></td><td></td></tr><tr><td>Has children (specific)</td><td><code>//ul[li]</code></td><td></td></tr><tr><td>Or logic</td><td><code>//a[@name or @href]</code></td><td><a href="https://devhints.io/xpath#operators" target="_blank" rel="external">?</a></td></tr><tr><td>Union (joins results)</td><td>`//a</td><td>//div`</td><td><a href="https://devhints.io/xpath#unions" target="_blank" rel="external">?</a></td></tr></tbody></table><h3 id="Class-check"><a href="#Class-check" class="headerlink" title="Class check"></a>Class check</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//div[contains(concat(&apos; &apos;,normalize-space(@class),&apos; &apos;),&apos; foobar &apos;)]</div></pre></td></tr></table></figure><p>Xpath doesn’t have the “check if part of space-separated list” operator, so this is the workaround (<a href="http://pivotallabs.com/xpath-css-class-matching/" target="_blank" rel="external">source</a>).</p><h2 id="Expressions"><a href="#Expressions" class="headerlink" title="Expressions"></a>Expressions</h2><h3 id="Steps-and-axes"><a href="#Steps-and-axes" class="headerlink" title="Steps and axes"></a>Steps and axes</h3><table><thead><tr><th><code>//</code></th><th><code>ul</code></th><th><code>/</code></th><th><code>a[@id=&#39;link&#39;]</code></th></tr></thead><tbody><tr><td>Axis</td><td>Step</td><td>Axis</td><td>Step</td></tr></tbody></table><h3 id="Prefixes"><a href="#Prefixes" class="headerlink" title="Prefixes"></a>Prefixes</h3><table><thead><tr><th>Prefix</th><th>Example</th><th>What</th></tr></thead><tbody><tr><td><code>//</code></td><td><code>//hr[@class=&#39;edge&#39;]</code></td><td>Anywhere</td></tr><tr><td><code>./</code></td><td><code>./a</code></td><td>Relative</td></tr><tr><td><code>/</code></td><td><code>/html/body/div</code></td><td>Root</td></tr></tbody></table><p>Begin your expression with any of these.</p><h3 id="Axes"><a href="#Axes" class="headerlink" title="Axes"></a>Axes</h3><table><thead><tr><th>Axis</th><th>Example</th><th>What</th></tr></thead><tbody><tr><td><code>/</code></td><td><code>//ul/li/a</code></td><td>Child</td></tr><tr><td><code>//</code></td><td><code>//[@id=&quot;list&quot;]//a</code></td><td>Descendant</td></tr></tbody></table><p>Separate your steps with <code>/</code>. Use two (<code>//</code>) if you don’t want to select direct children.</p><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//div</div><div class="line">//div[@name=&apos;box&apos;]</div><div class="line">//[@id=&apos;link&apos;]</div></pre></td></tr></table></figure><p>A step may have an element name (<code>div</code>) and <a href="https://devhints.io/xpath#predicate" target="_blank" rel="external">predicates</a> (<code>[...]</code>). Both are optional. They can also be these other things:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//a/text()     #=&gt; &quot;Go home&quot;</div><div class="line">//a/@href      #=&gt; &quot;index.html&quot;</div><div class="line">//a/*          #=&gt; All a&apos;s child elements</div></pre></td></tr></table></figure><h2 id="Predicates"><a href="#Predicates" class="headerlink" title="Predicates"></a>Predicates</h2><h3 id="Predicates-1"><a href="#Predicates-1" class="headerlink" title="Predicates"></a>Predicates</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//div[true()] </div><div class="line">//div[@class=&quot;head&quot;]</div><div class="line">//div[@class=&quot;head&quot;][@id=&quot;top&quot;]</div></pre></td></tr></table></figure><p>Restricts a nodeset only if some condition is true. They can be chained.</p><h3 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Comparison</div><div class="line">//a[@id = &quot;xyz&quot;]</div><div class="line">//a[@id != &quot;xyz&quot;]</div><div class="line">//a[@price &gt; 25]</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Logic (and/or)</div><div class="line">//div[@id=&quot;head&quot; and position()=2]</div><div class="line">//div[(x and y) or not(z)]</div></pre></td></tr></table></figure><p>Use comparison and logic operators to make conditionals.</p><h3 id="Using-nodes"><a href="#Using-nodes" class="headerlink" title="Using nodes"></a>Using nodes</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Use them inside functions</div><div class="line">//ul[count(li) &gt; 2]</div><div class="line">//ul[count(li[@class=&apos;hide&apos;]) &gt; 0]</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># This returns `&lt;ul&gt;` that has a `&lt;li&gt;` child</div><div class="line">//ul[li]</div></pre></td></tr></table></figure><p>You can use nodes inside predicates.</p><h3 id="Indexing"><a href="#Indexing" class="headerlink" title="Indexing"></a>Indexing</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//a[1]                  # first &lt;a&gt;</div><div class="line">//a[last()]             # last &lt;a&gt;</div><div class="line">//ol/li[2]              # second &lt;li&gt;</div><div class="line">//ol/li[position()=2]   # same as above</div><div class="line">//ol/li[position()&gt;1]   # :not(:first-child)</div></pre></td></tr></table></figure><p>Use <code>[]</code> with a number, or <code>last()</code> or <code>position()</code>.</p><h3 id="Chaining-order"><a href="#Chaining-order" class="headerlink" title="Chaining order"></a>Chaining order</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a[1][@href=&apos;/&apos;]</div><div class="line">a[@href=&apos;/&apos;][1]</div></pre></td></tr></table></figure><p>Order is significant, these two are different.</p><h3 id="Nesting-predicates"><a href="#Nesting-predicates" class="headerlink" title="Nesting predicates"></a>Nesting predicates</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//section[//h1[@id=&apos;hi&apos;]]</div></pre></td></tr></table></figure><p>This returns <code>&lt;section&gt;</code> if it has an <code>&lt;h1&gt;</code> descendant with <code>id=&#39;hi&#39;</code>.</p><h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><h3 id="Node-functions"><a href="#Node-functions" class="headerlink" title="Node functions"></a>Node functions</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">name()                     # //[starts-with(name(), &apos;h&apos;)]</div><div class="line">text()                     # //button[text()=&quot;Submit&quot;]</div><div class="line">                           # //button/text()</div><div class="line">lang(str)</div><div class="line">namespace-uri()</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">count()                    # //table[count(tr)=1]</div><div class="line">position()                 # //ol/li[position()=2]</div></pre></td></tr></table></figure><h3 id="Boolean-functions"><a href="#Boolean-functions" class="headerlink" title="Boolean functions"></a>Boolean functions</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">not(expr)                  # button[not(starts-with(text(),&quot;Submit&quot;))]</div></pre></td></tr></table></figure><h3 id="String-functions"><a href="#String-functions" class="headerlink" title="String functions"></a>String functions</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">contains()                 # font[contains(@class,&quot;head&quot;)]</div><div class="line">starts-with()              # font[starts-with(@class,&quot;head&quot;)]</div><div class="line">ends-with()                # font[ends-with(@class,&quot;head&quot;)]</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">concat(x,y)</div><div class="line">substring(str, start, len)</div><div class="line">substring-before(&quot;01/02&quot;, &quot;/&quot;)  #=&gt; 01</div><div class="line">substring-after(&quot;01/02&quot;, &quot;/&quot;)   #=&gt; 02</div><div class="line">translate()</div><div class="line">normalize-space()</div><div class="line">string-length()</div></pre></td></tr></table></figure><h3 id="Type-conversion"><a href="#Type-conversion" class="headerlink" title="Type conversion"></a>Type conversion</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">string()</div><div class="line">number()</div><div class="line">boolean()</div></pre></td></tr></table></figure><h2 id="Axes-1"><a href="#Axes-1" class="headerlink" title="Axes"></a>Axes</h2><h3 id="Using-axes"><a href="#Using-axes" class="headerlink" title="Using axes"></a>Using axes</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//ul/li                       # ul &gt; li</div><div class="line">//ul/child::li                # ul &gt; li (same)</div><div class="line">//ul/following-sibling::li    # ul ~ li</div><div class="line">//ul/descendant-or-self::li   # ul li</div><div class="line">//ul/ancestor-or-self::li     # $(&apos;ul&apos;).closest(&apos;li&apos;)</div></pre></td></tr></table></figure><p>Steps of an expression are separated by <code>/</code>, usually used to pick child nodes. That’s not always true: you can specify a different “axis” with <code>::</code>.</p><table><thead><tr><th><code>//</code></th><th><code>ul</code></th><th><code>/child::</code></th><th><code>li</code></th></tr></thead><tbody><tr><td>Axis</td><td>Step</td><td>Axis</td><td>Step</td></tr></tbody></table><h3 id="Child-axis"><a href="#Child-axis" class="headerlink" title="Child axis"></a>Child axis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># both the same</div><div class="line">//ul/li/a</div><div class="line">//child::ul/child::li/child::a</div></pre></td></tr></table></figure><p><code>child::</code> is the default axis. This makes <code>//a/b/c</code> work.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># both the same</div><div class="line"># this works because `child::li` is truthy, so the predicate succeeds</div><div class="line">//ul[li]</div><div class="line">//ul[child::li]</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># both the same</div><div class="line">//ul[count(li) &gt; 2]</div><div class="line">//ul[count(child::li) &gt; 2]</div></pre></td></tr></table></figure><h3 id="Descendant-or-self-axis"><a href="#Descendant-or-self-axis" class="headerlink" title="Descendant-or-self axis"></a>Descendant-or-self axis</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># both the same</div><div class="line">//div//h4</div><div class="line">//div/descendant-or-self::h4</div></pre></td></tr></table></figure><p><code>//</code> is short for the <code>descendant-or-self::</code> axis.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># both the same</div><div class="line">//ul//[last()]</div><div class="line">//ul/descendant-or-self::[last()]</div></pre></td></tr></table></figure><h3 id="Other-axes"><a href="#Other-axes" class="headerlink" title="Other axes"></a>Other axes</h3><table><thead><tr><th>Axis</th><th>Abbrev</th><th>Notes</th></tr></thead><tbody><tr><td><code>ancestor</code></td><td></td><td></td></tr><tr><td><code>ancestor-or-self</code></td><td></td><td></td></tr><tr><td><code>attribute</code></td><td><code>@</code></td><td><code>@href</code> is short for <code>attribute::href</code></td></tr><tr><td><code>child</code></td><td></td><td><code>div</code> is short for <code>child::div</code></td></tr><tr><td><code>descendant</code></td><td></td><td></td></tr><tr><td><code>descendant-or-self</code></td><td><code>//</code></td><td><code>//</code> is short for <code>/descendant-or-self::node()/</code></td></tr><tr><td><code>namespace</code></td><td></td><td></td></tr><tr><td><code>self</code></td><td><code>.</code></td><td><code>.</code> is short for <code>self::node()</code></td></tr><tr><td><code>parent</code></td><td><code>..</code></td><td><code>..</code> is short for <code>parent::node()</code></td></tr><tr><td><code>following</code></td><td></td><td></td></tr><tr><td><code>following-sibling</code></td><td></td><td></td></tr><tr><td><code>preceding</code></td><td></td><td></td></tr><tr><td><code>preceding-sibling</code></td><td></td></tr></tbody></table><p>There are other axes you can use.</p><h3 id="Unions"><a href="#Unions" class="headerlink" title="Unions"></a>Unions</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//a | //span</div></pre></td></tr></table></figure><p>Use <code>|</code> to join two expressions.</p><h2 id="More-examples"><a href="#More-examples" class="headerlink" title="More examples"></a>More examples</h2><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//*                 # all elements</div><div class="line">count(//*)          # count all elements</div><div class="line">(//h1)[1]/text()    # text of the first h1 heading</div><div class="line">//li[span]          # find a &lt;li&gt; with an &lt;span&gt; inside it</div><div class="line">                    # ...expands to //li[child::span]</div><div class="line">//ul/li/..          # use .. to select a parent</div></pre></td></tr></table></figure><h3 id="Find-a-parent"><a href="#Find-a-parent" class="headerlink" title="Find a parent"></a>Find a parent</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//section[h1[@id=&apos;section-name&apos;]]</div></pre></td></tr></table></figure><p>Finds a <code>&lt;section&gt;</code> that directly contains <code>h1#section-name</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Find a &lt;section&gt; that contains h1#section-name</div><div class="line">//section[//*[@id=&apos;section-name&apos;]]</div></pre></td></tr></table></figure><p>Finds a <code>&lt;section&gt;</code> that contains <code>h1#section-name</code>. (Same as above, but uses descendant-or-self instead of child)</p><h3 id="Closest"><a href="#Closest" class="headerlink" title="Closest"></a>Closest</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./ancestor-or-self::[@class=&quot;box&quot;]</div></pre></td></tr></table></figure><p>Works like jQuery’s <code>$().closest(&#39;.box&#39;)</code>.</p><h3 id="Attributes"><a href="#Attributes" class="headerlink" title="Attributes"></a>Attributes</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">//item[@price &gt; 2*@discount]</div></pre></td></tr></table></figure><p>Finds <code>&lt;item&gt;</code> and check its attributes</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Xpath-test-bed-链接地址&quot;&gt;&lt;a href=&quot;#Xpath-test-bed-链接地址&quot; class=&quot;headerlink&quot; title=&quot;Xpath test bed(链接地址)&quot;&gt;&lt;/a&gt;Xpath test bed(&lt;a href=&quot;http
      
    
    </summary>
    
    
      <category term="xpath" scheme="http://yoursite.com/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title>Vim Cheatsheet</title>
    <link href="http://yoursite.com/2018/01/02/Vim-Cheatsheet/"/>
    <id>http://yoursite.com/2018/01/02/Vim-Cheatsheet/</id>
    <published>2018-01-02T03:38:34.000Z</published>
    <updated>2018-01-02T03:45:44.092Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Exiting-链接地址"><a href="#Exiting-链接地址" class="headerlink" title="Exiting(链接地址)"></a>Exiting(<a href="https://devhints.io/vim" target="_blank" rel="external">链接地址</a>)</h3><table><thead><tr><th><code>:qa</code></th><th>Close all files</th></tr></thead><tbody><tr><td><code>:qa!</code></td><td>Close all files, abandon changes</td></tr><tr><td><code>:w</code></td><td>Save</td></tr><tr><td><code>:wq</code> <em>/</em> <code>:x</code></td><td>Save and close file</td></tr><tr><td><code>:q</code></td><td>Close file</td></tr><tr><td><code>:q!</code></td><td>Close file, abandon changes</td></tr><tr><td><code>ZZ</code></td><td>Save and quit</td></tr><tr><td><code>ZQ</code></td><td>Quit without checking changes</td></tr></tbody></table><h3 id="Navigating"><a href="#Navigating" class="headerlink" title="Navigating"></a>Navigating</h3><table><thead><tr><th><code>h</code> <code>j</code> <code>k</code> <code>l</code></th><th>Arrow keys</th></tr></thead><tbody><tr><td><code>&lt;C-U&gt;</code> <em>/</em> <code>&lt;C-D&gt;</code></td><td>Page up/page down</td></tr></tbody></table><h4 id="Words"><a href="#Words" class="headerlink" title="Words"></a>Words</h4><table><thead><tr><th><code>b</code> <em>/</em> <code>w</code></th><th>Previous/next word</th></tr></thead><tbody><tr><td><code>e</code> <em>/</em> <code>ge</code></td><td>Previous/next end of word</td></tr></tbody></table><h4 id="Line"><a href="#Line" class="headerlink" title="Line"></a>Line</h4><table><thead><tr><th><code>0</code> <em>(zero)</em></th><th>Start of line</th></tr></thead><tbody><tr><td><code>^</code></td><td>Start of line <em>(after whitespace)</em></td></tr><tr><td><code>$</code></td><td>End of line</td></tr></tbody></table><h4 id="Document"><a href="#Document" class="headerlink" title="Document"></a>Document</h4><table><thead><tr><th><code>gg</code></th><th>First line</th></tr></thead><tbody><tr><td><code>G</code></td><td>Last line</td></tr><tr><td><code>:n</code></td><td>Go to line <code>n</code></td></tr><tr><td><code>nG</code></td><td>Go to line <code>n</code></td></tr></tbody></table><h3 id="Editing"><a href="#Editing" class="headerlink" title="Editing"></a>Editing</h3><table><thead><tr><th><code>a</code></th><th>Append</th></tr></thead><tbody><tr><td><code>i</code></td><td>Insert</td></tr><tr><td><code>o</code></td><td>Next line</td></tr><tr><td><code>O</code></td><td>Previous line</td></tr><tr><td><code>s</code></td><td>Delete char and insert</td></tr><tr><td><code>S</code></td><td>Delete line and insert</td></tr><tr><td><code>C</code></td><td>Delete until end of line and insert</td></tr><tr><td><code>r</code></td><td>Replace one character</td></tr><tr><td><code>R</code></td><td>Enter Replace mode</td></tr></tbody></table><h3 id="Exiting-insert-mode"><a href="#Exiting-insert-mode" class="headerlink" title="Exiting insert mode"></a>Exiting insert mode</h3><table><thead><tr><th><code>Esc</code> <em>/</em> <code>&lt;C-[&gt;</code></th><th>Exit insert mode</th></tr></thead><tbody><tr><td><code>&lt;C-C&gt;</code></td><td>Exit insert mode, and abort current command</td></tr></tbody></table><h3 id="Clipboard"><a href="#Clipboard" class="headerlink" title="Clipboard"></a>Clipboard</h3><table><thead><tr><th><code>x</code></th><th>Delete character</th></tr></thead><tbody><tr><td><code>dd</code></td><td>Delete line <em>(Cut)</em></td></tr><tr><td><code>yy</code></td><td>Yank line <em>(Copy)</em></td></tr><tr><td><code>p</code></td><td>Paste</td></tr><tr><td><code>P</code></td><td>Paste before</td></tr></tbody></table><h3 id="Visual-mode"><a href="#Visual-mode" class="headerlink" title="Visual mode"></a>Visual mode</h3><table><thead><tr><th><code>v</code></th><th>Enter visual mode</th></tr></thead><tbody><tr><td><code>V</code></td><td>Enter visual line mode</td></tr><tr><td><code>&lt;C-V&gt;</code></td><td>Enter visual block mode</td></tr></tbody></table><h4 id="In-visual-mode"><a href="#In-visual-mode" class="headerlink" title="In visual mode"></a>In visual mode</h4><table><thead><tr><th><code>d</code> <em>/</em> <code>x</code></th><th>Delete selection</th></tr></thead><tbody><tr><td><code>s</code></td><td>Replace selection</td></tr><tr><td><code>y</code></td><td>Yank selection <em>(Copy)</em></td></tr></tbody></table><p>See <a href="https://devhints.io/vim#operators" target="_blank" rel="external">Operators</a> for other things you can do.</p><h2 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h2><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><p>Operators let you operate in a range of text (defined by <em>motion</em>). These are preformed in normal mode.</p><table><thead><tr><th><code>d</code></th><th><code>w</code></th></tr></thead><tbody><tr><td>Operator</td><td>Motion</td></tr></tbody></table><h3 id="Operators-list"><a href="#Operators-list" class="headerlink" title="Operators list"></a>Operators list</h3><table><thead><tr><th><code>d</code></th><th>Delete</th></tr></thead><tbody><tr><td><code>y</code></td><td>Yank <em>(copy)</em></td></tr><tr><td><code>c</code></td><td>Change <em>(delete then insert)</em></td></tr><tr><td><code>&gt;</code></td><td>Indent right</td></tr><tr><td><code>&lt;</code></td><td>Indent left</td></tr><tr><td><code>g~</code></td><td>Swap case</td></tr><tr><td><code>gU</code></td><td>Uppercase</td></tr><tr><td><code>gu</code></td><td>Lowercase</td></tr><tr><td><code>!</code></td><td>Filter through external program</td></tr></tbody></table><p>See <code>:help operator</code></p><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p>Combine operators with <em>motions</em> to use them.</p><table><thead><tr><th><code>d</code><em>d</em></th><th><em>(repeat the letter)</em> Delete current line</th></tr></thead><tbody><tr><td><code>d</code><em>w</em></td><td>Delete to next word</td></tr><tr><td><code>d</code><em>b</em></td><td>Delete to beginning of word</td></tr><tr><td><em>2</em><code>dd</code></td><td>Delete 2 lines</td></tr><tr><td><code>d</code><em>ip</em></td><td>Delete a text object <em>(inside paragraph)</em></td></tr><tr><td><em>(in visual mode)</em> <code>d</code></td><td>Delete selection</td></tr></tbody></table><p>See: <code>:help motion.txt</code></p><h2 id="Text-objects"><a href="#Text-objects" class="headerlink" title="Text objects"></a>Text objects</h2><h3 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h3><p>Text objects let you operate (with an <em>operator</em>) in or around text blocks (<em>objects</em>).</p><table><thead><tr><th><code>v</code></th><th><code>i</code></th><th><code>p</code></th></tr></thead><tbody><tr><td>Operator</td><td>[i]nside or [a]round</td><td>Text object</td></tr></tbody></table><h3 id="Text-objects-1"><a href="#Text-objects-1" class="headerlink" title="Text objects"></a>Text objects</h3><table><thead><tr><th><code>p</code></th><th>Paragraph</th></tr></thead><tbody><tr><td><code>w</code></td><td>Word</td></tr><tr><td><code>s</code></td><td>Sentence</td></tr><tr><td><code>[</code> <code>(</code> <code>{</code> <code>&lt;</code></td><td>A [], (), or {} block</td></tr><tr><td><code>&#39;</code> <code>&quot;</code> <figure class="highlight plain"><figcaption><span>A quoted string       |</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line">| `b`             | A block [(            |</div><div class="line">| `B`             | A block in [&#123;         |</div><div class="line">| `t`             | A XML tag block       |</div><div class="line"></div><div class="line">### Examples</div><div class="line"></div><div class="line">| `vip`       | Select paragraph                   |</div><div class="line">| ----------- | ---------------------------------- |</div><div class="line">| `vipipipip` | Select more                        |</div><div class="line">| `yip`       | Yank inner paragraph               |</div><div class="line">| `yap`       | Yank paragraph (including newline) |</div><div class="line">| `dip`       | Delete inner paragraph             |</div><div class="line">| `cip`       | Change inner paragraph             |</div><div class="line"></div><div class="line">See [Operators](https://devhints.io/vim#operators) for other things you can do.</div><div class="line"></div><div class="line">## Misc</div><div class="line"></div><div class="line">### Folds</div><div class="line"></div><div class="line">| `zo` */* `zO` | Open                         |</div><div class="line">| ------------- | ---------------------------- |</div><div class="line">| `zc` */* `zC` | Close                        |</div><div class="line">| `za` */* `zA` | Toggle                       |</div><div class="line">| `zv`          | Open folds for this line     |</div><div class="line">| `zM`          | Close all                    |</div><div class="line">| `zR`          | Open all                     |</div><div class="line">| `zm`          | Fold more *(foldlevel += 1)* |</div><div class="line">| `zr`          | Fold less *(foldlevel -= 1)* |</div><div class="line">| `zx`          | Update folds                 |</div><div class="line"></div><div class="line">Uppercase ones are recursive (eg, `zO` is open recursively).</div><div class="line"></div><div class="line">### Navigation</div><div class="line"></div><div class="line">| `[(` `[&#123;` `[&lt;` | previous `(` or `&#123;` or `&lt;` |</div><div class="line">| -------------- | -------------------------- |</div><div class="line">| `])`           | next                       |</div><div class="line">| `[m`           | previous method start      |</div><div class="line">| `[M`           | previous method end        |</div><div class="line"></div><div class="line">### Jumping</div><div class="line"></div><div class="line">| `&lt;C-O&gt;` | Go back to previous location |</div><div class="line">| ------- | ---------------------------- |</div><div class="line">| `&lt;C-I&gt;` | Go forward                   |</div><div class="line">| `gf`    | go to file in cursor         |</div><div class="line"></div><div class="line">### Counters</div><div class="line"></div><div class="line">| `&lt;C-A&gt;` | increment number |</div><div class="line">| ------- | ---------------- |</div><div class="line">| `&lt;C-X&gt;` | decrement        |</div><div class="line"></div><div class="line">### Windows</div><div class="line"></div><div class="line">| `z&#123;height&#125;&lt;Cr&gt;` | Resize pane to `&#123;height&#125;` lines tall |</div><div class="line">| --------------- | ------------------------------------ |</div><div class="line">|                 |                                      |</div><div class="line"></div><div class="line">### Tags</div><div class="line"></div><div class="line">| `:tag Classname`     | Jump to first definition of Classname    |</div><div class="line">| -------------------- | ---------------------------------------- |</div><div class="line">| `&lt;C-]&gt;`              | Jump to definition                       |</div><div class="line">| `g]`                 | See all definitions                      |</div><div class="line">| `&lt;C-T&gt;`              | Go back to last tag                      |</div><div class="line">| `&lt;C-O&gt; &lt;C-I&gt;`        | Back/forward                             |</div><div class="line">| `:tselect Classname` | Find definitions of Classname            |</div><div class="line">| `:tjump Classname`   | Find definitions of Classname (auto-select 1st) |</div><div class="line"></div><div class="line">### Case</div><div class="line"></div><div class="line">| `~`   | toggle case (Case =&gt; cASE)           |</div><div class="line">| ----- | ------------------------------------ |</div><div class="line">| `gU`  | uppercase                            |</div><div class="line">| `gu`  | lowercase                            |</div><div class="line">| `gUU` | uppercase current line (also `gUgU`) |</div><div class="line">| `guu` | lowercase current line (also `gugu`) |</div><div class="line"></div><div class="line">Do these in visual or normal mode.</div><div class="line"></div><div class="line">### Marks</div><div class="line"></div><div class="line">| ``^` | Last position of cursor in insert mode   |</div><div class="line">| ---- | ---------------------------------------- |</div><div class="line">| ``.` | Last change                              |</div><div class="line">| ```` | Last jump                                |</div><div class="line">| `ma` | Mark this cursor position as `a`         |</div><div class="line">| ``a` | Jump to the cursor position `a`          |</div><div class="line">| `&apos;a` | Jump to the beginning of the line with position `a` |</div><div class="line"></div><div class="line">### Misc</div><div class="line"></div><div class="line">| `.`  | repeat last command                      |</div><div class="line">| ---- | ---------------------------------------- |</div><div class="line">| `]p` | paste under the current indentation level |</div><div class="line">| `zz` | Center this line                         |</div><div class="line"></div><div class="line">### Command line</div><div class="line"></div><div class="line">| `&lt;C-R&gt;&lt;C-W&gt;` | insert current word into the command line |</div><div class="line">| ------------ | ---------------------------------------- |</div><div class="line">| `&lt;C-R&gt;&quot;`     | paste from “ register                    |</div><div class="line"></div><div class="line">### Text alignment</div></pre></td></tr></table></figure></td></tr></tbody></table><p>:center [width]<br>:right [width]<br>:left</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">See `:help formatting`</div><div class="line"></div><div class="line">### Calculator</div></pre></td></tr></table></figure><p><c-r>=128/2</c-r></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Do this in insert mode.</div><div class="line"></div><div class="line">### Exiting with an error</div></pre></td></tr></table></figure><p>:cq<br>:cquit</p><p>```</p><p>Works like <code>:qa</code>, but throws an error. Great for aborting Git commands.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Exiting-链接地址&quot;&gt;&lt;a href=&quot;#Exiting-链接地址&quot; class=&quot;headerlink&quot; title=&quot;Exiting(链接地址)&quot;&gt;&lt;/a&gt;Exiting(&lt;a href=&quot;https://devhints.io/vim&quot; target=
      
    
    </summary>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Xpath Syntax</title>
    <link href="http://yoursite.com/2018/01/01/Xpath-syntax/"/>
    <id>http://yoursite.com/2018/01/01/Xpath-syntax/</id>
    <published>2018-01-01T12:06:00.000Z</published>
    <updated>2018-01-02T02:44:10.555Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Path-句法-URL-："><a href="#Path-句法-URL-：" class="headerlink" title="Path 句法(URL)："></a>Path 句法(<a href="https://docs.python.org/2/library/xml.etree.elementtree.html" target="_blank" rel="external">URL</a>)：</h3><table><thead><tr><th>Syntax</th><th>Meaning</th></tr></thead><tbody><tr><td><code>tag</code></td><td>Selects all child elements with the given tag. For example, <code>spam</code> selects all child elements named <code>spam</code>, and <code>spam/egg</code> selects all grandchildren named <code>egg</code> in all children named <code>spam</code>.</td></tr><tr><td><code>*</code></td><td>Selects all child elements. For example, <code>*/egg</code> selects all grandchildren named <code>egg</code>.</td></tr><tr><td><code>.</code></td><td>Selects the current node. This is mostly useful at the beginning of the path, to indicate that it’s a relative path.</td></tr><tr><td><code>//</code></td><td>Selects all subelements, on all levels beneath the current element. For example, <code>.//egg</code> selects all <code>egg</code> elements in the entire tree.</td></tr><tr><td><code>..</code></td><td>Selects the parent element.</td></tr><tr><td><code>[@attrib]</code></td><td>Selects all elements that have the given attribute.</td></tr><tr><td><code>[@attrib=&#39;value&#39;]</code></td><td>Selects all elements for which the given attribute has the given value. The value cannot contain quotes.</td></tr><tr><td><code>[tag]</code></td><td>Selects all elements that have a child named <code>tag</code>. Only immediate children are supported.</td></tr><tr><td><code>[tag=&#39;text&#39;]</code></td><td>Selects all elements that have a child named <code>tag</code> whose complete text content, including descendants, equals the given <code>text</code>.</td></tr><tr><td><code>[position]</code></td><td>Selects all elements that are located at the given position. The position can be either an integer (1 is the first position), the expression <code>last()</code> (for the last position), or a position relative to the last position (e.g. <code>last()-1</code>).</td></tr></tbody></table><p>Predicates (expressions within square brackets) must be preceded by a tag name, an asterisk, or another predicate. <code>position</code> predicates must be preceded by a tag name.</p><p>Xpath Python使用示例：</p><p>Here’s an example that demonstrates some of the XPath capabilities of the module. We’ll be using the <code>countrydata</code> <strong>XML document</strong> from the <a href="#elementtree-parsing-xml">Parsing XML</a> section:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</div><div class="line"></div><div class="line">root = ET.fromstring(countrydata)</div><div class="line"></div><div class="line"><span class="comment"># Top-level elements</span></div><div class="line">root.findall(<span class="string">"."</span>)</div><div class="line"></div><div class="line"><span class="comment"># All 'neighbor' grand-children of 'country' children of the top-level</span></div><div class="line"><span class="comment"># elements</span></div><div class="line">root.findall(<span class="string">"./country/neighbor"</span>)</div><div class="line"></div><div class="line"><span class="comment"># Nodes with name='Singapore' that have a 'year' child</span></div><div class="line">root.findall(<span class="string">".//year/..[@name='Singapore']"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 'year' nodes that are children of nodes with name='Singapore'</span></div><div class="line">root.findall(<span class="string">".//*[@name='Singapore']/year"</span>)</div><div class="line"></div><div class="line"><span class="comment"># All 'neighbor' nodes that are the second child of their parent</span></div><div class="line">root.findall(<span class="string">".//neighbor[2]"</span>)</div></pre></td></tr></table></figure><p>以上示例用于XML文本，如果要作用于HTML文本，需要将 <code>import xml.etree.ElementTree as ET</code> 改为 <code>import lxml.html</code> ，以及将 <code>root = ET.fromstring(countrydata)</code> 改为 <code>root = lxml.html.fromstring(HTMLData)</code></p><h2 id="XPath-Axes"><a href="#XPath-Axes" class="headerlink" title="XPath Axes"></a>XPath Axes</h2><p>An axis defines a node-set relative to the current node.</p><table><thead><tr><th>AxisName</th><th>Result</th></tr></thead><tbody><tr><td>ancestor</td><td>Selects all ancestors (parent, grandparent, etc.) of the current node</td></tr><tr><td>ancestor-or-self</td><td>Selects all ancestors (parent, grandparent, etc.) of the current node and the current node itself</td></tr><tr><td>attribute</td><td>Selects all attributes of the current node</td></tr><tr><td>child</td><td>Selects all children of the current node</td></tr><tr><td>descendant</td><td>Selects all descendants (children, grandchildren, etc.) of the current node</td></tr><tr><td>descendant-or-self</td><td>Selects all descendants (children, grandchildren, etc.) of the current node and the current node itself</td></tr><tr><td>following</td><td>Selects everything in the document after the closing tag of the current node</td></tr><tr><td>following-sibling</td><td>Selects all siblings after the current node</td></tr><tr><td>namespace</td><td>Selects all namespace nodes of the current node</td></tr><tr><td>parent</td><td>Selects the parent of the current node</td></tr><tr><td>preceding</td><td>Selects all nodes that appear before the current node in the document, except ancestors, attribute nodes and namespace nodes</td></tr><tr><td>preceding-sibling</td><td>Selects all siblings before the current node</td></tr><tr><td>self</td><td>Selects the current node</td></tr></tbody></table><h3 id="Axe-Examples"><a href="#Axe-Examples" class="headerlink" title="Axe Examples"></a>Axe Examples</h3><table><thead><tr><th>Example</th><th>Result</th></tr></thead><tbody><tr><td>child::book</td><td>Selects all book nodes that are children of the current node</td></tr><tr><td>attribute::lang</td><td>Selects the lang attribute of the current node</td></tr><tr><td>child::*</td><td>Selects all element children of the current node</td></tr><tr><td>attribute::*</td><td>Selects all attributes of the current node</td></tr><tr><td>child::text()</td><td>Selects all text node children of the current node</td></tr><tr><td>child::node()</td><td>Selects all children of the current node</td></tr><tr><td>descendant::book</td><td>Selects all book descendants of the current node</td></tr><tr><td>ancestor::book</td><td>Selects all book ancestors of the current node</td></tr><tr><td>ancestor-or-self::book</td><td>Selects all book ancestors of the current node - and the current as well if it is a book node</td></tr><tr><td>child::*/child::price</td><td>Selects all price grandchildren of the current node</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Path-句法-URL-：&quot;&gt;&lt;a href=&quot;#Path-句法-URL-：&quot; class=&quot;headerlink&quot; title=&quot;Path 句法(URL)：&quot;&gt;&lt;/a&gt;Path 句法(&lt;a href=&quot;https://docs.python.org/2/libr
      
    
    </summary>
    
    
      <category term="Xpath, Python" scheme="http://yoursite.com/tags/Xpath-Python/"/>
    
  </entry>
  
  <entry>
    <title>Best Atom Plugins</title>
    <link href="http://yoursite.com/2017/12/28/Best-atom-plugins/"/>
    <id>http://yoursite.com/2017/12/28/Best-atom-plugins/</id>
    <published>2017-12-28T09:46:24.000Z</published>
    <updated>2017-12-28T09:48:09.582Z</updated>
    
    <content type="html"><![CDATA[<p><strong>转载地址：</strong> <a href="http://shanky.org/2017/01/11/atom-editor-for-python/" target="_blank" rel="external">Shashank Tiwari</a></p><p><a href="https://atom.io/" target="_blank" rel="external">Atom</a> is a beautiful and customizable editor that can be leveraged gainfully for Python programming. Built on <a href="http://electron.atom.io/" target="_blank" rel="external">Electron</a>, a technology for building cross platform desktop apps with JavaScript, HTML, and CSS, Atom is, as Github says, “hackable”. Its support for plugins and add-ons via packages allows one to add customizations and newer capabilities beyond what comes out of the box.</p><h2 id="Atom-Packages"><a href="#Atom-Packages" class="headerlink" title="Atom Packages"></a>Atom Packages</h2><p>The package system is at the heart of Atom’s design. Atom itself has a very lightweight core and most of its own default features, like the “Settings View”, are implemented via packages. The out of box comes with over 90 packages installed.</p><p>Newer packages can be searched and installed via the “Install” tab in the “Settings View”. Look at Figure 1, which shows the “Install” tab.</p><p><img src="http://shanky.org/assets/images/install_tab_in_the_settings_view.png" alt="img">Figure 1: Atom Settings View Install Tab</p><blockquote><p>These searchable Atom packages are published to the official Atom registry at <a href="https://atom.io/packages" target="_blank" rel="external">https://atom.io/packages</a>.</p></blockquote><h3 id="Installing-using-the-command-line"><a href="#Installing-using-the-command-line" class="headerlink" title="Installing using the command line"></a>Installing using the command line</h3><p>Atom comes with a command line utility named <em>apm</em>, short for atom package manager. Latest version of a package can be installed easily using the following command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm install &lt;package_name&gt;</div></pre></td></tr></table></figure><p>This assumes you know the exact name of the package you want to install. If you are not sure of the exact name of the package then you can search for packages like so:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm search &lt;possible_package_name&gt;</div></pre></td></tr></table></figure><p>While installing the latest version of a package is desirable, you may need to install a specific older version. Its easy to install a specific version as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm install &lt;package_name&gt;@&lt;package_version&gt;</div></pre></td></tr></table></figure><p>To view more information about a specific package, use:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm view &lt;package_name&gt;</div></pre></td></tr></table></figure><h2 id="Atom-Packages-for-Python"><a href="#Atom-Packages-for-Python" class="headerlink" title="Atom Packages for Python"></a>Atom Packages for Python</h2><p>PEP8 (short for Python Enhancement Proposal 8) is the style guide for Python code. Pythonic code is optimized for readability. Clean, explicit, and simple code structure, design, and layout is preferred over complexity. PEP257 specifies docstring conventions. Docstrings are string literals that appear as the first statement in a Python function, module, class, or method definition. It serves as code comments and is also accessible at runtime via the “<strong>doc</strong>” attribute. Atom’s support for code linters can help you proactively check your code for errors and adherence to PEP8 and PEP257.</p><p>Linter is an Atom package that provides a unified and consistent api for all atom linter plugins. Start by installing this package:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm install linter</div></pre></td></tr></table></figure><p>Next, piggyback on the Python packages to do the heavy lifting. Install flake8, the wrapper around PyFlakes, pycodestyle, and Mc Cabe script. <em>pip</em> is the most popular and widely used package manager for Python and using it is very easy. To install flake8 and flake8-pep257, use pip as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install flake8</div><div class="line">pip install flake8-pep257</div></pre></td></tr></table></figure><p>Now that flake8 is available on your system, install linter-flake8. The linter-flake8 package is a flake8 provider for linter. It makes it possible for Atom linter to leverage flake8 for checking Python code for style adherence. Install linter-flake8 like so:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm install linter-flake8</div></pre></td></tr></table></figure><h2 id="Automating-Style-Corrections"><a href="#Automating-Style-Corrections" class="headerlink" title="Automating Style Corrections"></a>Automating Style Corrections</h2><p>Linter with flake8’s help surfaces style related errors and warnings but doesn’t correct it for you. The python package autopep8 on the other hand autocorrects your errors. Install autopep8 via the command line as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install autopep8</div></pre></td></tr></table></figure><p>Formatting issues identified by PEP8 checkers are listed at <a href="https://pep8.readthedocs.io/en/latest/intro.html#error-codes" target="_blank" rel="external">PEP8 Error Codes</a>. autopep8 is capable of fixing most of these. autopep8 can be used via the command line to fix errors like so:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">autopep8 --in-place --aggressive --aggressive &lt;filename&gt;</div></pre></td></tr></table></figure><p>Within an editor or a development environment its very convenient if the auto corrections are transparent and don’t involve invoking utilities via the command line. A good point for auto correction if often when a source code file is saved after it is edited. Atom’s atom-beautify package allows integration of autopep8 as the beautifier for Python code. It also offers the option to “Beautify on Save”. Install atom-beautify as follows:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apm install atom-beautify</div></pre></td></tr></table></figure><p>Look at Figure 2, which illustrates the configuration options for Python within atom-beautify settings.</p><p><img src="http://shanky.org/assets/images/atom_beautify_configuration_options_for_pyton.png" alt="img">Figure 2: atom-beautify configuration options for Python</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;转载地址：&lt;/strong&gt; &lt;a href=&quot;http://shanky.org/2017/01/11/atom-editor-for-python/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shashank Tiwari&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="Atom" scheme="http://yoursite.com/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title>About Python Class&#39;s &#39;__Init__&#39;</title>
    <link href="http://yoursite.com/2017/12/28/About-Python-Class-s-init/"/>
    <id>http://yoursite.com/2017/12/28/About-Python-Class-s-init/</id>
    <published>2017-12-28T08:46:16.000Z</published>
    <updated>2017-12-28T08:58:57.981Z</updated>
    
    <content type="html"><![CDATA[<p>Code example:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span><span class="params">(object)</span>:</span></div><div class="line"><span class="string">"""Docstring"""</span>    </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, color, doors, tires, vtype)</span>:</span></div><div class="line">        <span class="string">"""Constructor"""</span></div><div class="line">        self.color = color</div><div class="line">        self.doors = doors</div><div class="line">        self.tires = tires</div><div class="line">        self.vtype = vtype</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">brake</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        Stop the car</span></div><div class="line"><span class="string">        """</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="string">"%s braking"</span> % self.vtype</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drive</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        Drive the car</span></div><div class="line"><span class="string">        """</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="string">"I'm driving a %s %s!"</span> % (self.color, self.vtype)</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    car = Vehicle(<span class="string">"blue"</span>, <span class="number">5</span> , <span class="number">4</span>, <span class="string">"car"</span>)</div><div class="line">    print(car.brake)</div><div class="line">    print(car.drive)</div></pre></td></tr></table></figure><p>从中可以看出， <strong>init</strong>再次用于初始化class的参数用，或许这就是init最主要的用途，也就是对class参数的初始化。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Code example:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Differences of JavaScript With Python</title>
    <link href="http://yoursite.com/2017/12/26/Differences-of-JavaScript-with-Python/"/>
    <id>http://yoursite.com/2017/12/26/Differences-of-JavaScript-with-Python/</id>
    <published>2017-12-26T02:59:09.000Z</published>
    <updated>2017-12-26T06:25:22.908Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Expecting-Loose-Comparison"><a href="#Expecting-Loose-Comparison" class="headerlink" title="Expecting Loose Comparison"></a>Expecting Loose Comparison</h2><p>In regular comparison, data type does not matter. This if statement returns true:</p><p>var x = 10;<br>var y = “10”;<br>if (x == y)</p><p>In strict comparison, data type does matter. This if statement returns false:</p><p>var x = 10;<br>var y = “10”;<br>if (x === y)</p><p>It is a common mistake to forget that switch statements use strict comparison:</p><p>This case switch will display an alert:</p><p>var x = 10;<br>switch(x) {<br>​    case 10: alert(“Hello”);<br>}</p><p>This case switch will not display an alert:</p><p>var x = 10;<br>switch(x) {<br>​    case “10”: alert(“Hello”);<br>}</p><h2 id="Misunderstanding-Floats"><a href="#Misunderstanding-Floats" class="headerlink" title="Misunderstanding Floats"></a>Misunderstanding Floats</h2><p>All numbers in JavaScript are stored as 64-bits <strong>Floating point numbers</strong> (Floats).</p><p>All programming languages, including JavaScript, have difficulties with precise floating point values:</p><p>var x = 0.1;<br>var y = 0.2;<br>var z = x + y            // the result in z will not be 0.3</p><p>To solve the problem above, it helps to multiply and divide:</p><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p>var z = (x <em> 10 + y </em> 10) / 10;       // z will be 0.3      —- (same with python)</p><h2 id="closing-ending-statements-with-semicolon-is-optional-in-JavaScript"><a href="#closing-ending-statements-with-semicolon-is-optional-in-JavaScript" class="headerlink" title="closing (ending) statements with semicolon is optional in JavaScript."></a>closing (ending) statements with semicolon is optional in JavaScript.</h2><h2 id="Accessing-Arrays-with-Named-Indexes"><a href="#Accessing-Arrays-with-Named-Indexes" class="headerlink" title="Accessing Arrays with Named Indexes"></a>Accessing Arrays with Named Indexes</h2><p>Many programming languages support arrays with named indexes.</p><p>Arrays with named indexes are called associative arrays (or hashes).</p><p>JavaScript does <strong>not</strong> support arrays with named indexes.</p><p>In JavaScript, <strong>arrays</strong> use <strong>numbered indexes</strong>:  </p><p>In JavaScript, <strong>objects</strong> use <strong>named indexes</strong>.</p><h2 id="Undefined-is-Not-Null"><a href="#Undefined-is-Not-Null" class="headerlink" title="Undefined is Not Null"></a>Undefined is Not Null</h2><p>With JavaScript, <strong>null</strong> is for objects, <strong>undefined</strong> is for variables, properties, and methods.</p><p>To be null, an object has to be defined, otherwise it will be undefined.</p><h2 id="Expecting-Block-Level-Scope"><a href="#Expecting-Block-Level-Scope" class="headerlink" title="Expecting Block Level Scope"></a>Expecting Block Level Scope</h2><p>JavaScript <strong>does not</strong> create a new scope for each code block.</p><p>It is true in many programming languages, but <strong>not true</strong> in JavaScript.</p><p>This code will display the value of i (10), even OUTSIDE the for loop block:</p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h3><p>for (var i = 0; i &lt; 10; i++) {<br>​    // some code<br>}<br>return i;</p><h2 id="Built-in-JavaScript-Constructors"><a href="#Built-in-JavaScript-Constructors" class="headerlink" title="Built-in JavaScript Constructors"></a>Built-in JavaScript Constructors</h2><p>JavaScript has built-in constructors for native objects:</p><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h3><p>var x1 = new Object();    // A new Object object<br>var x2 = new String();    // A new String object<br>var x3 = new Number();    // A new Number object<br>var x4 = new Boolean();   // A new Boolean object<br>var x5 = new Array();     // A new Array object<br>var x6 = new RegExp();    // A new RegExp object<br>var x7 = new Function();  // A new Function object<br>var x8 = new Date();      // A new Date object</p><p>The Math() object is not in the list. Math is a global object. The new keyword cannot be used on Math.</p><h2 id="Did-You-Know"><a href="#Did-You-Know" class="headerlink" title="Did You Know?"></a>Did You Know?</h2><p>As you can see, JavaScript has object versions of the primitive data types String, Number, and Boolean.</p><p>There is no reason to create complex objects. Primitive values execute much faster.</p><p>And there is no reason to use new Array(). Use array literals instead: []</p><p>And there is no reason to use new RegExp(). Use pattern literals instead: /()/</p><p>And there is no reason to use new Function(). Use function expressions instead: function () {}.</p><p>And there is no reason to use new Object(). Use object literals instead: {}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Expecting-Loose-Comparison&quot;&gt;&lt;a href=&quot;#Expecting-Loose-Comparison&quot; class=&quot;headerlink&quot; title=&quot;Expecting Loose Comparison&quot;&gt;&lt;/a&gt;Expectin
      
    
    </summary>
    
    
      <category term="JavaScript, Python" scheme="http://yoursite.com/tags/JavaScript-Python/"/>
    
  </entry>
  
  <entry>
    <title>Linux打开文本文件</title>
    <link href="http://yoursite.com/2017/12/21/Linux%E6%89%93%E5%BC%80%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/12/21/Linux打开文本文件/</id>
    <published>2017-12-21T05:39:24.000Z</published>
    <updated>2017-12-21T05:40:00.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux打开文件夹命令："><a href="#Linux打开文件夹命令：" class="headerlink" title="Linux打开文件夹命令："></a>Linux打开文件夹命令：</h2><p>gnome-open /etc</p><p>ubuntu中  nautilus /etc</p><p>Linux打开文件或者网址命令：</p><p>xdg-open { file | URL }</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux打开文件夹命令：&quot;&gt;&lt;a href=&quot;#Linux打开文件夹命令：&quot; class=&quot;headerlink&quot; title=&quot;Linux打开文件夹命令：&quot;&gt;&lt;/a&gt;Linux打开文件夹命令：&lt;/h2&gt;&lt;p&gt;gnome-open /etc&lt;/p&gt;
&lt;p&gt;ubu
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>关于学习编程的一些建议</title>
    <link href="http://yoursite.com/2017/12/21/%E5%85%B3%E4%BA%8E%E5%AD%A6%E4%B9%A0%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BB%BA%E8%AE%AE/"/>
    <id>http://yoursite.com/2017/12/21/关于学习编程的一些建议/</id>
    <published>2017-12-21T05:37:00.000Z</published>
    <updated>2017-12-21T05:38:42.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编程提高方法："><a href="#编程提高方法：" class="headerlink" title="编程提高方法："></a><strong>编程提高方法：</strong></h2><ol><li>不断练习。</li><li>抓大放小。（抓住那些感兴，趣能够推动编程水平真正有用的东西，放掉那些可能会纠缠住我们的细节问题）（不只是学习knowledge，更重要的是skills）</li><li>多练简单题。（从模仿开始，沉住气）</li><li>选最薄的参考书。</li><li>第一位问题是如何解决问题，而不是怎么快速解决。</li></ol><p>今后的写作要完全按照金字塔的形式，先总后分来进行。先有结构，程序要先有轮廓，无论是在看程序还是在写程序</p><p>结构化程序设计：由大到小，由粗到精，由抽象到具体</p><p>程序结构：</p><p>程序由若干模块组成</p><p>模块之内“高内聚”</p><p>模块之间“低耦合”</p><p>勤加练习，多做简单题</p><p>数据部分、运算部分、控制部分、传输部分</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;编程提高方法：&quot;&gt;&lt;a href=&quot;#编程提高方法：&quot; class=&quot;headerlink&quot; title=&quot;编程提高方法：&quot;&gt;&lt;/a&gt;&lt;strong&gt;编程提高方法：&lt;/strong&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;不断练习。&lt;/li&gt;
&lt;li&gt;抓大放小。（抓住那些感兴
      
    
    </summary>
    
    
      <category term="编程, 建议" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B-%E5%BB%BA%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu: Install Sublime</title>
    <link href="http://yoursite.com/2017/12/20/Ubuntu-install-sublime/"/>
    <id>http://yoursite.com/2017/12/20/Ubuntu-install-sublime/</id>
    <published>2017-12-20T03:37:45.000Z</published>
    <updated>2017-12-20T03:39:14.940Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Install-Sublime-Text-3-via-the-official-apt-repository"><a href="#Install-Sublime-Text-3-via-the-official-apt-repository" class="headerlink" title="Install Sublime Text 3 via the official apt repository:"></a>Install Sublime Text 3 via the official apt repository:</h4><p><strong>1.</strong> Open terminal via Ctrl+Alt+T or by searching for “Terminal” from desktop app launcher. When it opens, run command to install the key:</p><p><code>wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</code></p><p><img src="http://tipsonubuntu.com/wp-content/uploads/2017/05/sublimetext-apt-key-610x86.jpg" alt="sublimetext-apt-key"></p><p><strong>2.</strong> Then add the apt repository via command:</p><p><code>echo &quot;deb https://download.sublimetext.com/ apt/stable/&quot; | sudo tee /etc/apt/sources.list.d/sublime-text.list</code></p><p><img src="http://tipsonubuntu.com/wp-content/uploads/2017/05/sublime-text-apt-repo-610x93.jpg" alt="sublime text apt repository"></p><p><strong>3.</strong> Finally check updates and install <strong>sublime-text</strong> via your system package manager:</p><p><img src="http://tipsonubuntu.com/wp-content/uploads/2017/05/install-sublime-text-400x269.jpg" alt="install-sublime-text"></p><p>or by running commands:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line"></div><div class="line">sudo apt-get install sublime-text</div></pre></td></tr></table></figure><p>Once installed, launch it from your desktop app launcher and enjoy!</p><h4 id="Uninstall"><a href="#Uninstall" class="headerlink" title="Uninstall:"></a>Uninstall:</h4><p>To uninstall the editor, either use your system package manager or simply run command:</p><p><code>sudo apt-get remove sublime-text &amp;&amp; sudo apt-get autoremove</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Install-Sublime-Text-3-via-the-official-apt-repository&quot;&gt;&lt;a href=&quot;#Install-Sublime-Text-3-via-the-official-apt-repository&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="Ubuntu, Linux, Sublime" scheme="http://yoursite.com/tags/Ubuntu-Linux-Sublime/"/>
    
  </entry>
  
  <entry>
    <title>Generating a New SSH Key and Adding It to the Ssh-Agent</title>
    <link href="http://yoursite.com/2017/12/19/Generating-a-new-SSH-key-and-adding-it-to-the-ssh-agent/"/>
    <id>http://yoursite.com/2017/12/19/Generating-a-new-SSH-key-and-adding-it-to-the-ssh-agent/</id>
    <published>2017-12-19T10:41:55.000Z</published>
    <updated>2017-12-19T10:43:40.410Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Generating-a-new-SSH-key"><a href="#Generating-a-new-SSH-key" class="headerlink" title="Generating a new SSH key"></a>Generating a new SSH key</h3><ol><li><p>Open Terminal.</p></li><li><p>Paste the text below, substituting in your GitHub email address.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure><p>This creates a new ssh key, using the provided email as a label.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Generating public/private rsa key pair.</div></pre></td></tr></table></figure></li><li><p>When you’re prompted to “Enter a file in which to save the key,” press Enter. This accepts the default file location.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]</div></pre></td></tr></table></figure></li><li><p>At the prompt, type a secure passphrase. For more information, see</p></li></ol><p>   “Working with SSH key passphrases”</p><p>   .</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</div><div class="line">Enter same passphrase again: [Type passphrase again]</div></pre></td></tr></table></figure><h3 id="Adding-your-SSH-key-to-the-ssh-agent"><a href="#Adding-your-SSH-key-to-the-ssh-agent" class="headerlink" title="Adding your SSH key to the ssh-agent"></a>Adding your SSH key to the ssh-agent</h3><p>Before adding a new SSH key to the ssh-agent to manage your keys, you should have <a href="https://help.github.com/articles/checking-for-existing-ssh-keys" target="_blank" rel="external">checked for existing SSH keys</a> and <a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key" target="_blank" rel="external">generated a new SSH key</a>. When adding your SSH key to the agent, use the default macOS <code>ssh-add</code> command, and not an application installed by <a href="https://www.macports.org/" target="_blank" rel="external">macports</a>, <a href="http://brew.sh/" target="_blank" rel="external">homebrew</a>, or some other external source.</p><ol><li><p>Start the ssh-agent in the background.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">eval &quot;$(ssh-agent -s)&quot;</div><div class="line">Agent pid 59566</div></pre></td></tr></table></figure></li><li><p>If you’re using macOS Sierra 10.12.2 or later, you will need to modify your <code>~/.ssh/config</code> file to automatically load keys into the ssh-agent and store passphrases in your keychain.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Host *</div><div class="line"> AddKeysToAgent yes</div><div class="line"> UseKeychain yes</div><div class="line"> IdentityFile ~/.ssh/id_rsa</div></pre></td></tr></table></figure></li><li><p>Add your SSH private key to the ssh-agent and store your passphrase in the keychain. If you created your key with a different name, or if you are adding an existing key that has a different name, replace <em>id_rsa</em> in the command with the name of your private key file.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-add -K ~/.ssh/id_rsa</div></pre></td></tr></table></figure></li><li><p><a href="https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account" target="_blank" rel="external">Add the SSH key to your GitHub account</a>.</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Generating-a-new-SSH-key&quot;&gt;&lt;a href=&quot;#Generating-a-new-SSH-key&quot; class=&quot;headerlink&quot; title=&quot;Generating a new SSH key&quot;&gt;&lt;/a&gt;Generating a n
      
    
    </summary>
    
    
      <category term="github, key" scheme="http://yoursite.com/tags/github-key/"/>
    
  </entry>
  
  <entry>
    <title>Mac命令行安装Virtualbox &amp;&amp; Vagrant</title>
    <link href="http://yoursite.com/2017/12/19/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85Virtualbox-Vagrant/"/>
    <id>http://yoursite.com/2017/12/19/Mac命令行安装Virtualbox-Vagrant/</id>
    <published>2017-12-19T10:37:24.000Z</published>
    <updated>2017-12-19T10:38:38.804Z</updated>
    
    <content type="html"><![CDATA[<p>Vagrant uses Virtualbox to manage the virtual dependencies. You can directly download virtualbox and install or use homebrew for it.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew cask install virtualbox</div></pre></td></tr></table></figure><p>Now install Vagrant either from the website or use homebrew for installing it.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew cask install vagrant</div></pre></td></tr></table></figure><p>Vagrant-Manager helps you manage all your virtual machines in one place directly from the menubar.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew cask install vagrant-manager</div></pre></td></tr></table></figure><p>Usage Add the Vagrant box you want to use. We’ll use Ubuntu 12.04 for the following example.</p><p><code>$ vagrant box add precise64 http://files.vagrantup.com/precise64.box</code></p><p>You can find more boxes at Vagrant Cloud</p><p>Now create a test directory and cd into the test directory. Then we’ll initialize the vagrant machine.</p><p><code>$ vagrant init precise64</code></p><p>Now lets start the machine using the following command.</p><p><code>$ vagrant up</code></p><p>You can ssh into the machine now.</p><p><code>$ vagrant ssh</code></p><p>Halt the vagrant machine now.</p><p><code>$ vagrant halt</code></p><p>Other useful commands are suspend, destroy etc.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Vagrant uses Virtualbox to manage the virtual dependencies. You can directly download virtualbox and install or use homebrew for it.&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="terminal, Mac, virtualbox, vagrant" scheme="http://yoursite.com/tags/terminal-Mac-virtualbox-vagrant/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu:如何解决用命令安装docker-Engine遇到的问题</title>
    <link href="http://yoursite.com/2017/12/19/Ubuntu-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%94%A8%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85docker-engine%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/12/19/Ubuntu-如何解决用命令安装docker-engine遇到的问题/</id>
    <published>2017-12-19T09:14:26.000Z</published>
    <updated>2017-12-19T09:24:48.349Z</updated>
    
    <content type="html"><![CDATA[<p>在Ubuntu上用terminal安装Docker-engine时会出现以下问题：</p><figure class="highlight plain"><figcaption><span>following packages have unmet dependencies: ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">```docker-engine :</div></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">```libsystemd-journal0 (&gt;= 201) but it is not installable</div></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>aufs-tools but it is not going to be installed                 ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">```Recommends: cgroupfs-mount but it is not going to be installed or cgroup-lite but it is not going to be installed</div></pre></td></tr></table></figure><p><code>E: Unable to correct problems, you have held broken packages.</code></p><p>意思是说要安装docker-engine还需要几个缺少的依赖包，除了<strong>libsystemd-journal0</strong>用 <code>sudo apt install</code> 无法安装，其他的都可以顺利安装。那么，如何解决剩下的那个呢？下面是github上给出的方法，已经试用OK，分享出来：</p><h3 id="jordancrawfordnz-commented："><a href="#jordancrawfordnz-commented：" class="headerlink" title="jordancrawfordnz commented："></a><strong>jordancrawfordnz </strong>commented：</h3><p>I seem to have resolved this by putting <code>deb http://cz.archive.ubuntu.com/ubuntu trusty main</code> in <code>/etc/apt/sources.list</code> (as mentioned on the Ubuntu site at <a href="http://packages.ubuntu.com/trusty/i386/libsystemd-journal0/download" target="_blank" rel="external">http://packages.ubuntu.com/trusty/i386/libsystemd-journal0/download</a>), then doing <code>apt-get update</code>, <code>apt-get install libsystemd-journal0</code> and <code>apt-get install docker-engine</code>.</p><p>这是链接地址：<a href="https://github.com/moby/moby/issues/20698" target="_blank" rel="external">link</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Ubuntu上用terminal安装Docker-engine时会出现以下问题：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;following packages have unmet dependencie
      
    
    </summary>
    
    
      <category term="Ubuntu, Python, Dcoker" scheme="http://yoursite.com/tags/Ubuntu-Python-Dcoker/"/>
    
  </entry>
  
  <entry>
    <title>数据库SQL简话</title>
    <link href="http://yoursite.com/2017/12/18/%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E7%AE%80%E8%AF%9D/"/>
    <id>http://yoursite.com/2017/12/18/数据库SQL简话/</id>
    <published>2017-12-18T07:00:01.000Z</published>
    <updated>2017-12-18T08:22:29.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一些重要的SQL命令"><a href="#一些重要的SQL命令" class="headerlink" title="一些重要的SQL命令"></a>一些重要的SQL命令</h2><ul><li><strong>SELECT</strong> - extracts data from a database</li><li><strong>UPDATE</strong> - updates data in a database</li><li><strong>DELETE</strong> - deletes data from a database</li><li><strong>INSERT INTO</strong> - inserts new data into a database</li><li><strong>CREATE DATABASE</strong> - creates a new database</li><li><strong>ALTER DATABASE</strong> - modifies a database</li><li><strong>CREATE TABLE</strong> - creates a new table</li><li><strong>ALTER TABLE</strong> - modifies a table</li><li><strong>DROP TABLE</strong> - deletes a table</li><li><strong>CREATE INDEX</strong> - creates an index (search key)</li><li><strong>DROP INDEX</strong> - deletes an index</li></ul><hr><h2 id="The-SQL-SELECT-Statement"><a href="#The-SQL-SELECT-Statement" class="headerlink" title="The SQL SELECT Statement"></a>The SQL SELECT Statement</h2><p>The SELECT statement is used to select data from a database.</p><h3 id="SELECT-Syntax"><a href="#SELECT-Syntax" class="headerlink" title="SELECT Syntax"></a>SELECT Syntax</h3><p>SELECT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em>;</p><p>SELECT <em> FROM </em>table_name*;</p><h2 id="The-SQL-SELECT-DISTINCT-Statement"><a href="#The-SQL-SELECT-DISTINCT-Statement" class="headerlink" title="The SQL SELECT DISTINCT Statement"></a>The SQL SELECT DISTINCT Statement</h2><p>The SELECT DISTINCT statement is used to return only distinct (different) values.SELECT DISTINCT Syntax</p><p>SELECT DISTINCT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em>;</p><h2 id="The-SQL-WHERE-Clause"><a href="#The-SQL-WHERE-Clause" class="headerlink" title="The SQL WHERE Clause"></a>The SQL WHERE Clause</h2><p>The WHERE clause is used to filter records.</p><h3 id="WHERE-Syntax"><a href="#WHERE-Syntax" class="headerlink" title="WHERE Syntax"></a>WHERE Syntax</h3><p>SELECT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h2 id="The-SQL-AND-OR-and-NOT-Operators"><a href="#The-SQL-AND-OR-and-NOT-Operators" class="headerlink" title="The SQL AND, OR and NOT Operators"></a>The SQL AND, OR and NOT Operators</h2><p>The WHERE clause can be combined with AND, OR, and NOT operators.</p><h3 id="AND-Syntax"><a href="#AND-Syntax" class="headerlink" title="AND Syntax"></a>AND Syntax</h3><p>SELECT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em><br>WHERE <em>condition1</em> AND <em>condition2</em> AND <em>condition3 …</em>;</p><h3 id="OR-Syntax"><a href="#OR-Syntax" class="headerlink" title="OR Syntax"></a>OR Syntax</h3><p>SELECT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em><br>WHERE <em>condition1</em> OR <em>condition2</em> OR <em>condition3 …</em>;</p><h3 id="NOT-Syntax"><a href="#NOT-Syntax" class="headerlink" title="NOT Syntax"></a>NOT Syntax</h3><p>SELECT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em><br>WHERE NOT <em>condition</em>;</p><h2 id="The-SQL-ORDER-BY-Keyword"><a href="#The-SQL-ORDER-BY-Keyword" class="headerlink" title="The SQL ORDER BY Keyword"></a>The SQL ORDER BY Keyword</h2><p>The ORDER BY keyword is used to sort the result-set in ascending or descending order.</p><h3 id="ORDER-BY-Syntax"><a href="#ORDER-BY-Syntax" class="headerlink" title="ORDER BY Syntax"></a>ORDER BY Syntax</h3><p>SELECT <em>column1</em>, <em>column2, …</em><br>FROM <em>table_name</em><br>ORDER BY <em>column1, column2, …</em> ASC|DESC;</p><h2 id="The-SQL-INSERT-INTO-Statement"><a href="#The-SQL-INSERT-INTO-Statement" class="headerlink" title="The SQL INSERT INTO Statement"></a>The SQL INSERT INTO Statement</h2><p>The INSERT INTO statement is used to insert new records in a table.</p><h3 id="INSERT-INTO-Syntax"><a href="#INSERT-INTO-Syntax" class="headerlink" title="INSERT INTO Syntax"></a>INSERT INTO Syntax</h3><p>INSERT INTO <em>table_name</em> (<em>column1</em>, <em>column2</em>, <em>column3</em>, …)<br>VALUES (<em>value1</em>, <em>value2</em>, <em>value3</em>, …);</p><p>or:</p><p>INSERT INTO <em>table_name</em><br>VALUES (<em>value1</em>, <em>value2</em>, <em>value3</em>, …);</p><h2 id="NULL-Value"><a href="#NULL-Value" class="headerlink" title="NULL Value"></a>NULL Value</h2><p>A field with a NULL value is a field with no value.</p><h3 id="How-to-Test-for-NULL-Values"><a href="#How-to-Test-for-NULL-Values" class="headerlink" title="How to Test for NULL Values?"></a>How to Test for NULL Values?</h3><p>We will have to use the <strong>IS NULL</strong> and <strong>IS NOT NULL</strong> operators instead.</p><h3 id="IS-NULL-Syntax"><a href="#IS-NULL-Syntax" class="headerlink" title="IS NULL Syntax"></a>IS NULL Syntax</h3><p>SELECT <em>column_names</em> FROM <em>table_name</em><br>WHERE <em>column_name</em> IS NULL;</p><h3 id="IS-NOT-NULL-Syntax"><a href="#IS-NOT-NULL-Syntax" class="headerlink" title="IS NOT NULL Syntax"></a>IS NOT NULL Syntax</h3><p>SELECT <em>column_names </em>FROM<em> table_name</em><br>WHERE <em>column_name</em> IS NOT NULL;</p><h2 id="The-SQL-UPDATE-Statement"><a href="#The-SQL-UPDATE-Statement" class="headerlink" title="The SQL UPDATE Statement"></a>The SQL UPDATE Statement</h2><p>The UPDATE statement is used to modify the existing records in a table.</p><h3 id="UPDATE-Syntax"><a href="#UPDATE-Syntax" class="headerlink" title="UPDATE Syntax"></a>UPDATE Syntax</h3><p>UPDATE <em>table_name</em><br>SET <em>column1</em> = <em>value1</em>, <em>column2</em> = <em>value2</em>, …<br>WHERE <em>condition</em>;</p><h2 id="The-SQL-DELETE-Statement"><a href="#The-SQL-DELETE-Statement" class="headerlink" title="The SQL DELETE Statement"></a>The SQL DELETE Statement</h2><p>The DELETE statement is used to delete existing records in a table.</p><h3 id="DELETE-Syntax"><a href="#DELETE-Syntax" class="headerlink" title="DELETE Syntax"></a>DELETE Syntax</h3><p>DELETE FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h2 id="The-SQL-SELECT-TOP-Clause"><a href="#The-SQL-SELECT-TOP-Clause" class="headerlink" title="The SQL SELECT TOP Clause"></a>The SQL SELECT TOP Clause</h2><p>The SELECT TOP clause is used to specify the number of records to return.</p><p><strong>MySQL Syntax:</strong></p><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em> WHERE <em>condition</em><br>LIMIT <em>number</em>;</p><p><strong>SQL Server / MS Access Syntax:</strong></p><p>SELECT TOP <em>number</em>|<em>percent</em> <em>column_name(s)</em><br>FROM <em>table_name</em> WHERE <em>condition</em>;</p><h2 id="he-SQL-MIN-and-MAX-Functions"><a href="#he-SQL-MIN-and-MAX-Functions" class="headerlink" title="he SQL MIN() and MAX() Functions"></a>he SQL MIN() and MAX() Functions</h2><p>The MIN() function returns the smallest value of the selected column.</p><p>The MAX() function returns the largest value of the selected column.</p><h3 id="MIN-Syntax"><a href="#MIN-Syntax" class="headerlink" title="MIN() Syntax"></a>MIN() Syntax</h3><p>SELECT MIN(<em>column_name</em>)<br>FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h3 id="MAX-Syntax"><a href="#MAX-Syntax" class="headerlink" title="MAX() Syntax"></a>MAX() Syntax</h3><p>SELECT MAX(<em>column_name</em>)<br>FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h2 id="The-SQL-COUNT-AVG-and-SUM-Functions"><a href="#The-SQL-COUNT-AVG-and-SUM-Functions" class="headerlink" title="The SQL COUNT(), AVG() and SUM() Functions"></a>The SQL COUNT(), AVG() and SUM() Functions</h2><p>The COUNT() function returns the number of rows that matches a specified criteria.</p><p>The AVG() function returns the average value of a numeric column.</p><p>The SUM() function returns the total sum of a numeric column.</p><h3 id="COUNT-Syntax"><a href="#COUNT-Syntax" class="headerlink" title="COUNT() Syntax"></a>COUNT() Syntax</h3><p>SELECT COUNT(<em>column_name</em>)<br>FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h3 id="AVG-Syntax"><a href="#AVG-Syntax" class="headerlink" title="AVG() Syntax"></a>AVG() Syntax</h3><p>SELECT AVG(<em>column_name</em>)<br>FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h3 id="SUM-Syntax"><a href="#SUM-Syntax" class="headerlink" title="SUM() Syntax"></a>SUM() Syntax</h3><p>SELECT SUM(<em>column_name</em>)<br>FROM <em>table_name</em><br>WHERE <em>condition</em>;</p><h2 id="The-SQL-LIKE-Operator"><a href="#The-SQL-LIKE-Operator" class="headerlink" title="The SQL LIKE Operator"></a>The SQL LIKE Operator</h2><p>The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.</p><p>There are two wildcards used in conjunction with the LIKE operator:</p><ul><li>% - The percent sign represents zero, one, or multiple characters</li><li>_ - The underscore represents a single character</li></ul><h3 id="LIKE-Syntax"><a href="#LIKE-Syntax" class="headerlink" title="LIKE Syntax"></a>LIKE Syntax</h3><p>SELECT <em>column1, column2, …</em><br>FROM <em>table_name</em><br>WHERE <em>columnN</em> LIKE <em>pattern</em>;</p><h3 id="SQL-LIKE-Examples"><a href="#SQL-LIKE-Examples" class="headerlink" title="SQL LIKE Examples"></a>SQL LIKE Examples</h3><p>The following SQL statement selects all customers with a CustomerName starting with “a”:</p><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE CustomerName LIKE ‘a%’;</p><p>The following SQL statement selects all customers with a CustomerName ending with “a”:</p><h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE CustomerName LIKE ‘%a’;</p><p>The following SQL statement selects all customers with a CustomerName that have “or” in any position:</p><h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE CustomerName LIKE ‘%or%’;</p><p>The following SQL statement selects all customers with a CustomerName that have “r” in the second position:</p><h4 id="Example-3"><a href="#Example-3" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE CustomerName LIKE ‘_r%’;</p><p>The following SQL statement selects all customers with a CustomerName that starts with “a” and are at least 3 characters in length:</p><h4 id="Example-4"><a href="#Example-4" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE CustomerName LIKE ‘a_%_%’;</p><p>The following SQL statement selects all customers with a ContactName that starts with “a” and ends with “o”:</p><h4 id="Example-5"><a href="#Example-5" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE ContactName LIKE ‘a%o’;</p><p>The following SQL statement selects all customers with a CustomerName that does NOT start with “a”:</p><h4 id="Example-6"><a href="#Example-6" class="headerlink" title="Example"></a>Example</h4><p>SELECT * FROM Customers<br>WHERE CustomerName NOT LIKE ‘a%’;</p><h2 id="The-SQL-IN-Operator"><a href="#The-SQL-IN-Operator" class="headerlink" title="The SQL IN Operator"></a>The SQL IN Operator</h2><p>The IN operator allows you to specify multiple values in a WHERE clause.</p><p>The IN operator is a shorthand for multiple OR conditions.</p><h3 id="IN-Syntax"><a href="#IN-Syntax" class="headerlink" title="IN Syntax"></a>IN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>column_name</em> IN (<em>value1</em>, <em>value2</em>, …);</p><p>or:</p><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>column_name</em> IN (<em>SELECT STATEMENT</em>);</p><h2 id="The-SQL-BETWEEN-Operator"><a href="#The-SQL-BETWEEN-Operator" class="headerlink" title="The SQL BETWEEN Operator"></a>The SQL BETWEEN Operator</h2><p>The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.</p><h3 id="BETWEEN-Syntax"><a href="#BETWEEN-Syntax" class="headerlink" title="BETWEEN Syntax"></a>BETWEEN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>column_name</em> BETWEEN <em>value1</em> AND <em>value2;</em></p><h2 id="SQL-Aliases"><a href="#SQL-Aliases" class="headerlink" title="SQL Aliases"></a>SQL Aliases</h2><p>SQL aliases are used to give a table, or a column in a table, a temporary name.</p><h3 id="Alias-Column-Syntax"><a href="#Alias-Column-Syntax" class="headerlink" title="Alias Column Syntax"></a>Alias Column Syntax</h3><p>SELECT <em>column_name</em> AS <em>alias_name</em><br>FROM <em>table_name;</em></p><h3 id="Alias-Table-Syntax"><a href="#Alias-Table-Syntax" class="headerlink" title="Alias Table Syntax"></a>Alias Table Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em> AS <em>alias_name;</em></p><h2 id="SQL-JOIN"><a href="#SQL-JOIN" class="headerlink" title="SQL JOIN"></a>SQL JOIN</h2><p>A JOIN clause is used to combine rows from two or more tables, based on a related column between them.</p><h3 id="Different-Types-of-SQL-JOINs"><a href="#Different-Types-of-SQL-JOINs" class="headerlink" title="Different Types of SQL JOINs"></a>Different Types of SQL JOINs</h3><p>Here are the different types of the JOINs in SQL:</p><ul><li><strong>(INNER) JOIN</strong>: Returns records that have matching values in both tables</li><li><strong>LEFT (OUTER) JOIN</strong>: Return all records from the left table, and the matched records from the right table</li><li><strong>RIGHT (OUTER) JOIN</strong>: Return all records from the right table, and the matched records from the left table</li><li><strong>FULL (OUTER) JOIN</strong>: Return all records when there is a match in either left or right table</li></ul><p><img src="https://www.w3schools.com/sql/img_innerjoin.gif" alt="SQL INNER JOIN">  <img src="https://www.w3schools.com/sql/img_leftjoin.gif" alt="SQL LEFT JOIN">  <img src="https://www.w3schools.com/sql/img_rightjoin.gif" alt="SQL RIGHT JOIN">  <img src="https://www.w3schools.com/sql/img_fulljoin.gif" alt="SQL FULL OUTER JOIN"></p><h2 id="SQL-INNER-JOIN-Keyword"><a href="#SQL-INNER-JOIN-Keyword" class="headerlink" title="SQL INNER JOIN Keyword"></a>SQL INNER JOIN Keyword</h2><p>The INNER JOIN keyword selects records that have matching values in both tables.</p><h3 id="INNER-JOIN-Syntax"><a href="#INNER-JOIN-Syntax" class="headerlink" title="INNER JOIN Syntax"></a>INNER JOIN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table1</em><br>INNER JOIN <em>table2</em> ON <em>table1.column_name</em> = <em>table2.column_name</em>;</p><p><img src="https://www.w3schools.com/sql/img_innerjoin.gif" alt="SQL INNER JOIN"></p><h2 id="SQL-LEFT-JOIN-Keyword"><a href="#SQL-LEFT-JOIN-Keyword" class="headerlink" title="SQL LEFT JOIN Keyword"></a>SQL LEFT JOIN Keyword</h2><p>The LEFT JOIN keyword returns all records from the left table (table1), and the matched records from the right table (table2). The result is NULL from the right side, if there is no match.</p><h3 id="LEFT-JOIN-Syntax"><a href="#LEFT-JOIN-Syntax" class="headerlink" title="LEFT JOIN Syntax"></a>LEFT JOIN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table1</em><br>LEFT JOIN <em>table2</em> ON <em>table1.column_name</em> = <em>table2.column_name</em>;</p><p><strong>Note:</strong> In some databases LEFT JOIN is called LEFT OUTER JOIN.</p><p><img src="https://www.w3schools.com/sql/img_leftjoin.gif" alt="SQL LEFT JOIN"></p><h2 id="SQL-RIGHT-JOIN-Keyword"><a href="#SQL-RIGHT-JOIN-Keyword" class="headerlink" title="SQL RIGHT JOIN Keyword"></a>SQL RIGHT JOIN Keyword</h2><p>The RIGHT JOIN keyword returns all records from the right table (table2), and the matched records from the left table (table1). The result is NULL from the left side, when there is no match.</p><h3 id="RIGHT-JOIN-Syntax"><a href="#RIGHT-JOIN-Syntax" class="headerlink" title="RIGHT JOIN Syntax"></a>RIGHT JOIN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table1</em><br>RIGHT JOIN <em>table2</em> ON <em>table1.column_name</em> = <em>table2.column_name</em>;</p><p><strong>Note:</strong> In some databases RIGHT JOIN is called RIGHT OUTER JOIN.</p><p><img src="https://www.w3schools.com/sql/img_rightjoin.gif" alt="SQL RIGHT JOIN"></p><h2 id="SQL-FULL-OUTER-JOIN-Keyword"><a href="#SQL-FULL-OUTER-JOIN-Keyword" class="headerlink" title="SQL FULL OUTER JOIN Keyword"></a>SQL FULL OUTER JOIN Keyword</h2><p>The FULL OUTER JOIN keyword return all records when there is a match in either left (table1) or right (table2) table records.</p><p><strong>Note:</strong> FULL OUTER JOIN can potentially return very large result-sets!</p><h3 id="FULL-OUTER-JOIN-Syntax"><a href="#FULL-OUTER-JOIN-Syntax" class="headerlink" title="FULL OUTER JOIN Syntax"></a>FULL OUTER JOIN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table1</em><br>FULL OUTER JOIN <em>table2</em> ON <em>table1.column_name</em> = <em>table2.column_name</em>;</p><p><img src="https://www.w3schools.com/sql/img_fulljoin.gif" alt="SQL FULL OUTER JOIN"></p><h2 id="SQL-Self-JOIN"><a href="#SQL-Self-JOIN" class="headerlink" title="SQL Self JOIN"></a>SQL Self JOIN</h2><p>A self JOIN is a regular join, but the table is joined with itself.</p><h3 id="Self-JOIN-Syntax"><a href="#Self-JOIN-Syntax" class="headerlink" title="Self JOIN Syntax"></a>Self JOIN Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table1 T1, table1 T2</em><br>WHERE <em>condition</em>;</p><h2 id="The-SQL-UNION-Operator"><a href="#The-SQL-UNION-Operator" class="headerlink" title="The SQL UNION Operator"></a>The SQL UNION Operator</h2><p>The UNION operator is used to combine the result-set of two or more SELECT statements.</p><ul><li>Each SELECT statement within UNION must have the same number of columns</li><li>The columns must also have similar data types</li><li>The columns in each SELECT statement must also be in the same order</li></ul><h3 id="UNION-Syntax"><a href="#UNION-Syntax" class="headerlink" title="UNION Syntax"></a>UNION Syntax</h3><p>SELECT <em>column_name(s)</em> FROM <em>table1</em><br>UNION<br>SELECT <em>column_name(s)</em> FROM <em>table2</em>;</p><h3 id="UNION-ALL-Syntax"><a href="#UNION-ALL-Syntax" class="headerlink" title="UNION ALL Syntax"></a>UNION ALL Syntax</h3><p>The UNION operator selects only distinct values by default. To allow duplicate values, use UNION ALL:</p><p>SELECT <em>column_name(s)</em> FROM <em>table1</em><br>UNION ALL<br>SELECT <em>column_name(s)</em> FROM <em>table2</em>;</p><h2 id="The-SQL-GROUP-BY-Statement"><a href="#The-SQL-GROUP-BY-Statement" class="headerlink" title="The SQL GROUP BY Statement"></a>The SQL GROUP BY Statement</h2><p>The GROUP BY statement is often used with aggregate functions (COUNT, MAX, MIN, SUM, AVG) to group the result-set by one or more columns.</p><h3 id="GROUP-BY-Syntax"><a href="#GROUP-BY-Syntax" class="headerlink" title="GROUP BY Syntax"></a>GROUP BY Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>condition</em><br>GROUP BY <em>column_name(s)</em>ORDER BY <em>column_name(s);</em></p><h2 id="The-SQL-HAVING-Clause"><a href="#The-SQL-HAVING-Clause" class="headerlink" title="The SQL HAVING Clause"></a>The SQL HAVING Clause</h2><p>The HAVING clause was added to SQL because the WHERE keyword could not be used with aggregate functions.</p><h3 id="HAVING-Syntax"><a href="#HAVING-Syntax" class="headerlink" title="HAVING Syntax"></a>HAVING Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>condition</em><br>GROUP BY <em>column_name(s)</em>HAVING <em>condition</em>ORDER BY <em>column_name(s);</em></p><h2 id="The-SQL-EXISTS-Operator"><a href="#The-SQL-EXISTS-Operator" class="headerlink" title="The SQL EXISTS Operator"></a>The SQL EXISTS Operator</h2><p>The EXISTS operator is used to test for the existence of any record in a subquery.</p><h3 id="EXISTS-Syntax"><a href="#EXISTS-Syntax" class="headerlink" title="EXISTS Syntax"></a>EXISTS Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE EXISTS<br>(SELECT <em>column_name </em>FROM <em>table_name</em> WHERE <em>condition</em>);</p><h2 id="The-SQL-ANY-and-ALL-Operators"><a href="#The-SQL-ANY-and-ALL-Operators" class="headerlink" title="The SQL ANY and ALL Operators"></a>The SQL ANY and ALL Operators</h2><p>The ANY and ALL operators are used with a WHERE or HAVING clause.</p><p>The ANY operator returns true if any of the subquery values meet the condition.</p><p>The ALL operator returns true if all of the subquery values meet the condition.</p><h3 id="ANY-Syntax"><a href="#ANY-Syntax" class="headerlink" title="ANY Syntax"></a>ANY Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>column_name operator</em> ANY<br>(SELECT <em>column_name </em>FROM <em>table_name</em> WHERE <em>condition</em>);</p><h3 id="ALL-Syntax"><a href="#ALL-Syntax" class="headerlink" title="ALL Syntax"></a>ALL Syntax</h3><p>SELECT <em>column_name(s)</em><br>FROM <em>table_name</em><br>WHERE <em>column_name operator</em> ALL<br>(SELECT <em>column_name </em>FROM <em>table_name </em>WHERE <em>condition</em>);</p><h2 id="The-SQL-SELECT-INTO-Statement"><a href="#The-SQL-SELECT-INTO-Statement" class="headerlink" title="The SQL SELECT INTO Statement"></a>The SQL SELECT INTO Statement</h2><p>The SELECT INTO statement copies data from one table into a new table.</p><h3 id="SELECT-INTO-Syntax"><a href="#SELECT-INTO-Syntax" class="headerlink" title="SELECT INTO Syntax"></a>SELECT INTO Syntax</h3><p>Copy all columns into a new table:</p><p>SELECT <em><br>INTO </em>newtable<em> [IN </em>externaldb<em>]<br>FROM </em>oldtable<em>WHERE </em>condition*;</p><p>Copy only some columns into a new table:</p><p>SELECT <em>column1</em>, <em>column2</em>, <em>column3</em>, …<br>INTO <em>newtable</em> [IN <em>externaldb</em>]<br>FROM <em>oldtable</em>WHERE <em>condition;</em></p><h2 id="The-SQL-INSERT-INTO-SELECT-Statement"><a href="#The-SQL-INSERT-INTO-SELECT-Statement" class="headerlink" title="The SQL INSERT INTO SELECT Statement"></a>The SQL INSERT INTO SELECT Statement</h2><p>The INSERT INTO SELECT statement copies data from one table and inserts it into another table.</p><ul><li>INSERT INTO SELECT requires that data types in source and target tables match</li><li>The existing records in the target table are unaffected</li></ul><h3 id="INSERT-INTO-SELECT-Syntax"><a href="#INSERT-INTO-SELECT-Syntax" class="headerlink" title="INSERT INTO SELECT Syntax"></a>INSERT INTO SELECT Syntax</h3><p>Copy all columns from one table to another table:</p><p>INSERT INTO <em>table2</em><br>SELECT <em> FROM </em>table1<em>WHERE </em>condition*;</p><p>Copy only some columns from one table into another table:</p><p>INSERT INTO <em>table2</em> (<em>column1</em>, <em>column2</em>, <em>column3</em>, …)<br>SELECT <em>column1</em>, <em>column2</em>, <em>column3</em>, …<br>FROM <em>table1</em><br>WHERE <em>condition</em>;</p><h3 id="INSERT-INTO-SELECT-Syntax-1"><a href="#INSERT-INTO-SELECT-Syntax-1" class="headerlink" title="INSERT INTO SELECT Syntax"></a>INSERT INTO SELECT Syntax</h3><p>Copy all columns from one table to another table:</p><p>INSERT INTO <em>table2</em><br>SELECT <em> FROM </em>table1<em>WHERE </em>condition*;</p><p>Copy only some columns from one table into another table:</p><p>INSERT INTO <em>table2</em> (<em>column1</em>, <em>column2</em>, <em>column3</em>, …)<br>SELECT <em>column1</em>, <em>column2</em>, <em>column3</em>, …<br>FROM <em>table1</em><br>WHERE <em>condition</em>;</p><h1 id="SQL-Database"><a href="#SQL-Database" class="headerlink" title="SQL Database"></a>SQL Database</h1><h2 id="The-SQL-CREATE-DATABASE-Statement"><a href="#The-SQL-CREATE-DATABASE-Statement" class="headerlink" title="The SQL CREATE DATABASE Statement"></a>The SQL CREATE DATABASE Statement</h2><p>The CREATE DATABASE statement is used to create a new SQL database.</p><h3 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h3><p>CREATE DATABASE <em>databasename</em>;</p><h2 id="The-SQL-DROP-DATABASE-Statement"><a href="#The-SQL-DROP-DATABASE-Statement" class="headerlink" title="The SQL DROP DATABASE Statement"></a>The SQL DROP DATABASE Statement</h2><p>The DROP DATABASE statement is used to drop an existing SQL database.</p><h3 id="Syntax-1"><a href="#Syntax-1" class="headerlink" title="Syntax"></a>Syntax</h3><p>DROP DATABASE <em>databasename</em>;</p><h2 id="The-SQL-CREATE-TABLE-Statement"><a href="#The-SQL-CREATE-TABLE-Statement" class="headerlink" title="The SQL CREATE TABLE Statement"></a>The SQL CREATE TABLE Statement</h2><p>The CREATE TABLE statement is used to create a new table in a database.</p><h3 id="Syntax-2"><a href="#Syntax-2" class="headerlink" title="Syntax"></a>Syntax</h3><p>CREATE TABLE <em>table_name </em>(</p><ul><li>column1 datatype*,</li><li>column2 datatype*,</li><li>column3 datatype*,<br>….<br>);</li></ul><h2 id="The-SQL-DROP-TABLE-Statement"><a href="#The-SQL-DROP-TABLE-Statement" class="headerlink" title="The SQL DROP TABLE Statement"></a>The SQL DROP TABLE Statement</h2><p>The DROP TABLE statement is used to drop an existing table in a database.</p><h3 id="Syntax-3"><a href="#Syntax-3" class="headerlink" title="Syntax"></a>Syntax</h3><p>DROP TABLE <em>table_name</em>;</p><h2 id="SQL-ALTER-TABLE-Statement"><a href="#SQL-ALTER-TABLE-Statement" class="headerlink" title="SQL ALTER TABLE Statement"></a>SQL ALTER TABLE Statement</h2><p>The ALTER TABLE statement is used to add, delete, or modify columns in an existing table.</p><h3 id="ALTER-TABLE-ADD-Column"><a href="#ALTER-TABLE-ADD-Column" class="headerlink" title="ALTER TABLE - ADD Column"></a>ALTER TABLE - ADD Column</h3><p>To add a column in a table, use the following syntax:</p><p>ALTER TABLE <em>table_name</em><br>ADD <em>column_name datatype</em>;</p><h3 id="ALTER-TABLE-DROP-COLUMN"><a href="#ALTER-TABLE-DROP-COLUMN" class="headerlink" title="ALTER TABLE - DROP COLUMN"></a>ALTER TABLE - DROP COLUMN</h3><p>To delete a column in a table, use the following syntax (notice that some database systems don’t allow deleting a column):</p><p>ALTER TABLE <em>table_name</em><br>DROP COLUMN <em>column_name</em>;</p><h3 id="ALTER-TABLE-ALTER-MODIFY-COLUMN"><a href="#ALTER-TABLE-ALTER-MODIFY-COLUMN" class="headerlink" title="ALTER TABLE - ALTER/MODIFY COLUMN"></a>ALTER TABLE - ALTER/MODIFY COLUMN</h3><p>To change the data type of a column in a table, use the following syntax:</p><p><strong>SQL Server / MS Access:</strong></p><p>ALTER TABLE <em>table_name</em><br>ALTER COLUMN <em>column_name datatype</em>;</p><p><strong>My SQL / Oracle (prior version 10G):</strong></p><p>ALTER TABLE <em>table_name</em><br>MODIFY COLUMN <em>column_name datatype</em>;</p><p><strong>Oracle 10G and later:</strong></p><p>ALTER TABLE <em>table_name</em><br>MODIFY <em>column_name datatype</em>;</p><h1 id="SQL-Constraints"><a href="#SQL-Constraints" class="headerlink" title="SQL Constraints"></a>SQL Constraints</h1><p>SQL constraints are used to specify rules for data in a table.</p><h2 id="SQL-Create-Constraints"><a href="#SQL-Create-Constraints" class="headerlink" title="SQL Create Constraints"></a>SQL Create Constraints</h2><p>Constraints can be specified when the table is created with the CREATE TABLE statement, or after the table is created with the ALTER TABLE statement.</p><h3 id="Syntax-4"><a href="#Syntax-4" class="headerlink" title="Syntax"></a>Syntax</h3><p>CREATE TABLE <em>table_name </em>(</p><ul><li>column1 datatype<em> </em>constraint*,</li><li>column2 datatype<em> </em>constraint*,</li><li>column3 datatype<em> </em>constraint*,<br>​    ….<br>);</li></ul><hr><h2 id="SQL-Constraints-1"><a href="#SQL-Constraints-1" class="headerlink" title="SQL Constraints"></a>SQL Constraints</h2><p>SQL constraints are used to specify rules for the data in a table.</p><p>Constraints are used to limit the type of data that can go into a table. This ensures the accuracy and reliability of the data in the table. If there is any violation between the constraint and the data action, the action is aborted.</p><p>Constraints can be column level or table level. Column level constraints apply to a column, and table level constraints apply to the whole table.</p><p>The following constraints are commonly used in SQL:</p><ul><li><strong>NOT NULL</strong> - Ensures that a column cannot have a NULL value</li><li><strong>UNIQUE</strong> - Ensures that all values in a column are different</li><li><strong>PRIMARY KEY</strong> - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table</li><li><strong>FOREIGN KEY</strong> - Uniquely identifies a row/record in another table</li><li><strong>CHECK</strong> - Ensures that all values in a column satisfies a specific condition</li><li><strong>DEFAULT</strong> - Sets a default value for a column when no value is specified</li><li><strong>INDEX</strong> - Used to create and retrieve data from the database very quickly</li></ul><h2 id="SQL-NOT-NULL-Constraint"><a href="#SQL-NOT-NULL-Constraint" class="headerlink" title="SQL NOT NULL Constraint"></a>SQL NOT NULL Constraint</h2><p>By default, a column can hold NULL values.</p><p>The NOT NULL constraint enforces a column to NOT accept NULL values.</p><h3 id="Example-7"><a href="#Example-7" class="headerlink" title="Example"></a>Example</h3><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255) NOT NULL,<br>​    Age int<br>);</p><h2 id="SQL-UNIQUE-Constraint"><a href="#SQL-UNIQUE-Constraint" class="headerlink" title="SQL UNIQUE Constraint"></a>SQL UNIQUE Constraint</h2><p>The UNIQUE constraint ensures that all values in a column are different.</p><h3 id="SQL-UNIQUE-Constraint-on-CREATE-TABLE"><a href="#SQL-UNIQUE-Constraint-on-CREATE-TABLE" class="headerlink" title="SQL UNIQUE Constraint on CREATE TABLE"></a>SQL UNIQUE Constraint on CREATE TABLE</h3><p>The following SQL creates a UNIQUE constraint on the “ID” column when the “Persons” table is created:</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL UNIQUE,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int<br>);</p><p><strong>MySQL:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    UNIQUE (ID)<br>);</p><p>To name a UNIQUE constraint, and to define a UNIQUE constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    CONSTRAINT UC_Person UNIQUE (ID,LastName)<br>);</p><p>To name a UNIQUE constraint, and to define a UNIQUE constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>ADD CONSTRAINT UC_Person UNIQUE (ID,LastName);</p><hr><h3 id="DROP-a-UNIQUE-Constraint"><a href="#DROP-a-UNIQUE-Constraint" class="headerlink" title="DROP a UNIQUE Constraint"></a>DROP a UNIQUE Constraint</h3><p>To drop a UNIQUE constraint, use the following SQL:</p><p><strong>MySQL:</strong></p><p>ALTER TABLE Persons<br>DROP INDEX UC_Person;</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>DROP CONSTRAINT UC_Person;</p><h2 id="SQL-PRIMARY-KEY-Constraint"><a href="#SQL-PRIMARY-KEY-Constraint" class="headerlink" title="SQL PRIMARY KEY Constraint"></a>SQL PRIMARY KEY Constraint</h2><p>The PRIMARY KEY constraint uniquely identifies each record in a database table.</p><h3 id="SQL-PRIMARY-KEY-on-CREATE-TABLE"><a href="#SQL-PRIMARY-KEY-on-CREATE-TABLE" class="headerlink" title="SQL PRIMARY KEY on CREATE TABLE"></a>SQL PRIMARY KEY on CREATE TABLE</h3><p>The following SQL creates a PRIMARY KEY on the “ID” column when the “Persons” table is created:</p><p><strong>MySQL:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    PRIMARY KEY (ID)<br>);</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL PRIMARY KEY,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int<br>);</p><p>To allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    CONSTRAINT PK_Person PRIMARY KEY (ID,LastName)<br>);</p><h3 id="SQL-PRIMARY-KEY-on-ALTER-TABLE"><a href="#SQL-PRIMARY-KEY-on-ALTER-TABLE" class="headerlink" title="SQL PRIMARY KEY on ALTER TABLE"></a>SQL PRIMARY KEY on ALTER TABLE</h3><p>To create a PRIMARY KEY constraint on the “ID” column when the table is already created, use the following SQL:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>ADD PRIMARY KEY (ID);</p><p>To allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>ADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);</p><h3 id="DROP-a-PRIMARY-KEY-Constraint"><a href="#DROP-a-PRIMARY-KEY-Constraint" class="headerlink" title="DROP a PRIMARY KEY Constraint"></a>DROP a PRIMARY KEY Constraint</h3><p>To drop a PRIMARY KEY constraint, use the following SQL:</p><p><strong>MySQL:</strong></p><p>ALTER TABLE Persons<br>DROP PRIMARY KEY;</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>DROP CONSTRAINT PK_Person;</p><h2 id="SQL-FOREIGN-KEY-Constraint"><a href="#SQL-FOREIGN-KEY-Constraint" class="headerlink" title="SQL FOREIGN KEY Constraint"></a>SQL FOREIGN KEY Constraint</h2><p>A FOREIGN KEY is a key used to link two tables together.</p><p>A FOREIGN KEY is a field (or collection of fields) in one table that refers to the PRIMARY KEY in another table.</p><h3 id="SQL-FOREIGN-KEY-on-CREATE-TABLE"><a href="#SQL-FOREIGN-KEY-on-CREATE-TABLE" class="headerlink" title="SQL FOREIGN KEY on CREATE TABLE"></a>SQL FOREIGN KEY on CREATE TABLE</h3><p>The following SQL creates a FOREIGN KEY on the “PersonID” column when the “Orders” table is created:</p><p><strong>MySQL:</strong></p><p>CREATE TABLE Orders (<br>​    OrderID int NOT NULL,<br>​    OrderNumber int NOT NULL,<br>​    PersonID int,<br>​    PRIMARY KEY (OrderID),<br>​    FOREIGN KEY (PersonID) REFERENCES Persons(PersonID)<br>);</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Orders (<br>​    OrderID int NOT NULL PRIMARY KEY,<br>​    OrderNumber int NOT NULL,<br>​    PersonID int FOREIGN KEY REFERENCES Persons(PersonID)<br>);</p><p>To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Orders (<br>​    OrderID int NOT NULL,<br>​    OrderNumber int NOT NULL,<br>​    PersonID int,<br>​    PRIMARY KEY (OrderID),<br>​    CONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)<br>​    REFERENCES Persons(PersonID)<br>);</p><h3 id="SQL-FOREIGN-KEY-on-ALTER-TABLE"><a href="#SQL-FOREIGN-KEY-on-ALTER-TABLE" class="headerlink" title="SQL FOREIGN KEY on ALTER TABLE"></a>SQL FOREIGN KEY on ALTER TABLE</h3><p>To create a FOREIGN KEY constraint on the “PersonID” column when the “Orders” table is already created, use the following SQL:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Orders<br>ADD FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);</p><p>To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Orders<br>ADD CONSTRAINT FK_PersonOrder<br>FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);</p><h3 id="DROP-a-FOREIGN-KEY-Constraint"><a href="#DROP-a-FOREIGN-KEY-Constraint" class="headerlink" title="DROP a FOREIGN KEY Constraint"></a>DROP a FOREIGN KEY Constraint</h3><p>To drop a FOREIGN KEY constraint, use the following SQL:</p><p><strong>MySQL:</strong></p><p>ALTER TABLE Orders<br>DROP FOREIGN KEY FK_PersonOrder;</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Orders<br>DROP CONSTRAINT FK_PersonOrder;</p><h2 id="SQL-CHECK-Constraint"><a href="#SQL-CHECK-Constraint" class="headerlink" title="SQL CHECK Constraint"></a>SQL CHECK Constraint</h2><p>The CHECK constraint is used to limit the value range that can be placed in a column.</p><h3 id="SQL-CHECK-on-CREATE-TABLE"><a href="#SQL-CHECK-on-CREATE-TABLE" class="headerlink" title="SQL CHECK on CREATE TABLE"></a>SQL CHECK on CREATE TABLE</h3><p>The following SQL creates a CHECK constraint on the “Age” column when the “Persons” table is created. The CHECK constraint ensures that you can not have any person below 18 years:</p><p><strong>MySQL:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    CHECK (Age&gt;=18)<br>);</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int CHECK (Age&gt;=18)<br>);</p><p>To allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    City varchar(255),<br>​    CONSTRAINT CHK_Person CHECK (Age&gt;=18 AND City=’Sandnes’)<br>);</p><h3 id="SQL-CHECK-on-ALTER-TABLE"><a href="#SQL-CHECK-on-ALTER-TABLE" class="headerlink" title="SQL CHECK on ALTER TABLE"></a>SQL CHECK on ALTER TABLE</h3><p>To create a CHECK constraint on the “Age” column when the table is already created, use the following SQL:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>ADD CHECK (Age&gt;=18);</p><p>To allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns, use the following SQL syntax:</p><p><strong>MySQL / SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>ADD CONSTRAINT CHK_PersonAge CHECK (Age&gt;=18 AND City=’Sandnes’);</p><h3 id="DROP-a-CHECK-Constraint"><a href="#DROP-a-CHECK-Constraint" class="headerlink" title="DROP a CHECK Constraint"></a>DROP a CHECK Constraint</h3><p>To drop a CHECK constraint, use the following SQL:</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>DROP CONSTRAINT CHK_PersonAge;</p><p><strong>MySQL:</strong></p><p>ALTER TABLE Persons<br>DROP CHECK CHK_PersonAge;</p><h2 id="SQL-DEFAULT-Constraint"><a href="#SQL-DEFAULT-Constraint" class="headerlink" title="SQL DEFAULT Constraint"></a>SQL DEFAULT Constraint</h2><p>The DEFAULT constraint is used to provide a default value for a column.</p><h3 id="SQL-DEFAULT-on-CREATE-TABLE"><a href="#SQL-DEFAULT-on-CREATE-TABLE" class="headerlink" title="SQL DEFAULT on CREATE TABLE"></a>SQL DEFAULT on CREATE TABLE</h3><p>The following SQL sets a DEFAULT value for the “City” column when the “Persons” table is created:</p><p><strong>My SQL / SQL Server / Oracle / MS Access:</strong></p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    City varchar(255) DEFAULT ‘Sandnes’<br>);</p><p>The DEFAULT constraint can also be used to insert system values, by using functions like GETDATE():</p><p>CREATE TABLE Orders (<br>​    ID int NOT NULL,<br>​    OrderNumber int NOT NULL,<br>​    OrderDate date DEFAULT GETDATE()<br>);</p><h3 id="SQL-DEFAULT-on-ALTER-TABLE"><a href="#SQL-DEFAULT-on-ALTER-TABLE" class="headerlink" title="SQL DEFAULT on ALTER TABLE"></a>SQL DEFAULT on ALTER TABLE</h3><p>To create a DEFAULT constraint on the “City” column when the table is already created, use the following SQL:</p><p><strong>MySQL:</strong></p><p>ALTER TABLE Persons<br>ALTER City SET DEFAULT ‘Sandnes’;</p><p><strong>SQL Server / MS Access:</strong></p><p>ALTER TABLE Persons<br>ALTER COLUMN City SET DEFAULT ‘Sandnes’;</p><p><strong>Oracle:</strong></p><p>ALTER TABLE Persons<br>MODIFY City DEFAULT ‘Sandnes’;</p><h3 id="DROP-a-DEFAULT-Constraint"><a href="#DROP-a-DEFAULT-Constraint" class="headerlink" title="DROP a DEFAULT Constraint"></a>DROP a DEFAULT Constraint</h3><p>To drop a DEFAULT constraint, use the following SQL:</p><p><strong>MySQL:</strong></p><p>ALTER TABLE Persons<br>ALTER City DROP DEFAULT;</p><p><strong>SQL Server / Oracle / MS Access:</strong></p><p>ALTER TABLE Persons<br>ALTER COLUMN City DROP DEFAULT;</p><h2 id="SQL-CREATE-INDEX-Statement"><a href="#SQL-CREATE-INDEX-Statement" class="headerlink" title="SQL CREATE INDEX Statement"></a>SQL CREATE INDEX Statement</h2><p>The CREATE INDEX statement is used to create indexes in tables.</p><p>Indexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.</p><p><strong>Note:</strong> Updating a table with indexes takes more time than updating a table without (because the indexes also need an update). So, only create indexes on columns that will be frequently searched against.</p><h3 id="CREATE-INDEX-Syntax"><a href="#CREATE-INDEX-Syntax" class="headerlink" title="CREATE INDEX Syntax"></a>CREATE INDEX Syntax</h3><p>Creates an index on a table. Duplicate values are allowed:</p><p>CREATE INDEX <em>index_name</em><br>ON <em>table_name</em> (<em>column1</em>, <em>column2</em>, …);</p><h3 id="CREATE-UNIQUE-INDEX-Syntax"><a href="#CREATE-UNIQUE-INDEX-Syntax" class="headerlink" title="CREATE UNIQUE INDEX Syntax"></a>CREATE UNIQUE INDEX Syntax</h3><p>Creates a unique index on a table. Duplicate values are not allowed:</p><p>CREATE UNIQUE INDEX <em>index_name</em><br>ON <em>table_name</em> (<em>column1</em>, <em>column2</em>, …);</p><h3 id="CREATE-INDEX-Syntax-1"><a href="#CREATE-INDEX-Syntax-1" class="headerlink" title="CREATE INDEX Syntax"></a>CREATE INDEX Syntax</h3><p>Creates an index on a table. Duplicate values are allowed:</p><p>CREATE INDEX <em>index_name</em><br>ON <em>table_name</em> (<em>column1</em>, <em>column2</em>, …);</p><h3 id="CREATE-UNIQUE-INDEX-Syntax-1"><a href="#CREATE-UNIQUE-INDEX-Syntax-1" class="headerlink" title="CREATE UNIQUE INDEX Syntax"></a>CREATE UNIQUE INDEX Syntax</h3><p>Creates a unique index on a table. Duplicate values are not allowed:</p><p>CREATE UNIQUE INDEX <em>index_name</em><br>ON <em>table_name</em> (<em>column1</em>, <em>column2</em>, …);</p><h2 id="DROP-INDEX-Statement"><a href="#DROP-INDEX-Statement" class="headerlink" title="DROP INDEX Statement"></a>DROP INDEX Statement</h2><p>The DROP INDEX statement is used to delete an index in a table.</p><p><strong>MS Access:</strong></p><p>DROP INDEX <em>index_name</em> ON <em>table_name</em>;</p><p><strong>SQL Server:</strong></p><p>DROP INDEX <em>table_name</em>.<em>index_name</em>;</p><p><strong>DB2/Oracle:</strong></p><p>DROP INDEX <em>index_name</em>;</p><p><strong>MySQL:</strong></p><p>ALTER TABLE <em>table_name</em>DROP INDEX <em>index_name</em>;</p><h2 id="AUTO-INCREMENT-Field"><a href="#AUTO-INCREMENT-Field" class="headerlink" title="AUTO INCREMENT Field"></a>AUTO INCREMENT Field</h2><p>Auto-increment allows a unique number to be generated automatically when a new record is inserted into a table.</p><h2 id="Syntax-for-MySQL"><a href="#Syntax-for-MySQL" class="headerlink" title="Syntax for MySQL"></a>Syntax for MySQL</h2><p>The following SQL statement defines the “ID” column to be an auto-increment primary key field in the “Persons” table:</p><p>CREATE TABLE Persons (<br>​    ID int NOT NULL AUTO_INCREMENT,<br>​    LastName varchar(255) NOT NULL,<br>​    FirstName varchar(255),<br>​    Age int,<br>​    PRIMARY KEY (ID)<br>);</p><p>MySQL uses the AUTO_INCREMENT keyword to perform an auto-increment feature.</p><p>By default, the starting value for AUTO_INCREMENT is 1, and it will increment by 1 for each new record.</p><p>To let the AUTO_INCREMENT sequence start with another value, use the following SQL statement:</p><p>ALTER TABLE Persons AUTO_INCREMENT=100;</p><h2 id="SQL-Dates"><a href="#SQL-Dates" class="headerlink" title="SQL Dates"></a>SQL Dates</h2><h3 id="SQL-Date-Data-Types"><a href="#SQL-Date-Data-Types" class="headerlink" title="SQL Date Data Types"></a>SQL Date Data Types</h3><p><strong>MySQL</strong> comes with the following data types for storing a date or a date/time value in the database:</p><ul><li>DATE - format YYYY-MM-DD</li><li>DATETIME - format: YYYY-MM-DD HH:MI:SS</li><li>TIMESTAMP - format: YYYY-MM-DD HH:MI:SS</li><li>YEAR - format YYYY or YY</li></ul><h1 id="SQL-Operators"><a href="#SQL-Operators" class="headerlink" title="SQL Operators"></a>SQL Operators</h1><h2 id="SQL-Arithmetic-Operators"><a href="#SQL-Arithmetic-Operators" class="headerlink" title="SQL Arithmetic Operators"></a>SQL Arithmetic Operators</h2><table><thead><tr><th>Operator</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>+</td><td>Add</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_add" target="_blank" rel="external">Try it</a></td></tr><tr><td>-</td><td>Subtract</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_subtract" target="_blank" rel="external">Try it</a></td></tr><tr><td>*</td><td>Multiply</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_multiply" target="_blank" rel="external">Try it</a></td></tr><tr><td>/</td><td>Divide</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_divide" target="_blank" rel="external">Try it</a></td></tr><tr><td>%</td><td>Modulo</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_modulo" target="_blank" rel="external">Try it</a></td></tr></tbody></table><hr><h2 id="SQL-Bitwise-Operators"><a href="#SQL-Bitwise-Operators" class="headerlink" title="SQL Bitwise Operators"></a>SQL Bitwise Operators</h2><table><thead><tr><th>Operator</th><th>Description</th></tr></thead><tbody><tr><td>&amp;</td><td>Bitwise AND</td></tr><tr><td>\</td><td></td><td>Bitwise OR</td></tr><tr><td>^</td><td>Bitwise exclusive OR</td></tr></tbody></table><hr><h2 id="SQL-Comparison-Operators"><a href="#SQL-Comparison-Operators" class="headerlink" title="SQL Comparison Operators"></a>SQL Comparison Operators</h2><table><thead><tr><th>Operator</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>=</td><td>Equal to</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_equal_to" target="_blank" rel="external">Try it</a></td></tr><tr><td>&gt;</td><td>Greater than</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_greater_than" target="_blank" rel="external">Try it</a></td></tr><tr><td>&lt;</td><td>Less than</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_less_than" target="_blank" rel="external">Try it</a></td></tr><tr><td>&gt;=</td><td>Greater than or equal to</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_greater_than2" target="_blank" rel="external">Try it</a></td></tr><tr><td>&lt;=</td><td>Less than or equal to</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_less_than2" target="_blank" rel="external">Try it</a></td></tr><tr><td>&lt;&gt;</td><td>Not equal to</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_not_equal_to" target="_blank" rel="external">Try it</a></td></tr></tbody></table><hr><hr><h2 id="SQL-Compound-Operators"><a href="#SQL-Compound-Operators" class="headerlink" title="SQL Compound Operators"></a>SQL Compound Operators</h2><table><thead><tr><th>Operator</th><th>Description</th></tr></thead><tbody><tr><td>+=</td><td>Add equals</td></tr><tr><td>-=</td><td>Subtract equals</td></tr><tr><td>*=</td><td>Multiply equals</td></tr><tr><td>/=</td><td>Divide equals</td></tr><tr><td>%=</td><td>Modulo equals</td></tr><tr><td>&amp;=</td><td>Bitwise AND equals</td></tr><tr><td>^-=</td><td>Bitwise exclusive equals</td></tr><tr><td>\</td><td>*=</td><td>Bitwise OR equals</td></tr></tbody></table><hr><h2 id="SQL-Logical-Operators"><a href="#SQL-Logical-Operators" class="headerlink" title="SQL Logical Operators"></a>SQL Logical Operators</h2><table><thead><tr><th>Operator</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td>ALL</td><td>TRUE if all of the subquery values meet the condition</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_all&amp;ss=-1" target="_blank" rel="external">Try it</a></td></tr><tr><td>AND</td><td>TRUE if all the conditions separated by AND is TRUE</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_and" target="_blank" rel="external">Try it</a></td></tr><tr><td>ANY</td><td>TRUE if any of the subquery values meet the condition</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_any&amp;ss=-1" target="_blank" rel="external">Try it</a></td></tr><tr><td>BETWEEN</td><td>TRUE if the operand is within the range of comparisons</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_between" target="_blank" rel="external">Try it</a></td></tr><tr><td>EXISTS</td><td>TRUE if the subquery returns one or more records</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_exists" target="_blank" rel="external">Try it</a></td></tr><tr><td>IN</td><td>TRUE if the operand is equal to one of a list of expressions</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_in" target="_blank" rel="external">Try it</a></td></tr><tr><td>LIKE</td><td>TRUE if the operand matches a pattern</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_like" target="_blank" rel="external">Try it</a></td></tr><tr><td>NOT</td><td>Displays a record if the condition(s) is NOT TRUE</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_not" target="_blank" rel="external">Try it</a></td></tr><tr><td>OR</td><td>TRUE if any of the conditions separated by OR is TRUE</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_or" target="_blank" rel="external">Try it</a></td></tr><tr><td>SOME</td><td>TRUE if any of the subquery values meet the condition</td><td><a href="https://www.w3schools.com/sql/trysql.asp?filename=trysql_op_some&amp;ss=-1" target="_blank" rel="external">Try it</a></td></tr></tbody></table><h1 id="SQL-Data-Types-for-MySQL"><a href="#SQL-Data-Types-for-MySQL" class="headerlink" title="SQL Data Types for MySQL"></a>SQL Data Types for MySQL</h1><h3 id="Text-data-types"><a href="#Text-data-types" class="headerlink" title="Text data types:"></a>Text data types:</h3><table><thead><tr><th>Data type</th><th>Description</th></tr></thead><tbody><tr><td>CHAR(size)</td><td>Holds a fixed length string (can contain letters, numbers, and special characters). The fixed size is specified in parenthesis. Can store up to 255 characters</td></tr><tr><td>VARCHAR(size)</td><td>Holds a variable length string (can contain letters, numbers, and special characters). The maximum size is specified in parenthesis. Can store up to 255 characters. <strong>Note:</strong> If you put a greater value than 255 it will be converted to a TEXT type</td></tr><tr><td>TINYTEXT</td><td>Holds a string with a maximum length of 255 characters</td></tr><tr><td>TEXT</td><td>Holds a string with a maximum length of 65,535 characters</td></tr><tr><td>BLOB</td><td>For BLOBs (Binary Large OBjects). Holds up to 65,535 bytes of data</td></tr><tr><td>MEDIUMTEXT</td><td>Holds a string with a maximum length of 16,777,215 characters</td></tr><tr><td>MEDIUMBLOB</td><td>For BLOBs (Binary Large OBjects). Holds up to 16,777,215 bytes of data</td></tr><tr><td>LONGTEXT</td><td>Holds a string with a maximum length of 4,294,967,295 characters</td></tr><tr><td>LONGBLOB</td><td>For BLOBs (Binary Large OBjects). Holds up to 4,294,967,295 bytes of data</td></tr><tr><td>ENUM(x,y,z,etc.)</td><td>Let you enter a list of possible values. You can list up to 65535 values in an ENUM list. If a value is inserted that is not in the list, a blank value will be inserted.<strong>Note:</strong> The values are sorted in the order you enter them.You enter the possible values in this format: ENUM(‘X’,’Y’,’Z’)</td></tr><tr><td>SET</td><td>Similar to ENUM except that SET may contain up to 64 list items and can store more than one choice</td></tr></tbody></table><hr><hr><h3 id="Number-data-types"><a href="#Number-data-types" class="headerlink" title="Number data types:"></a>Number data types:</h3><table><thead><tr><th>Data type</th><th>Description</th></tr></thead><tbody><tr><td>TINYINT(size)</td><td>-128 to 127 normal. 0 to 255 UNSIGNED*. The maximum number of digits may be specified in parenthesis</td></tr><tr><td>SMALLINT(size)</td><td>-32768 to 32767 normal. 0 to 65535 UNSIGNED*. The maximum number of digits may be specified in parenthesis</td></tr><tr><td>MEDIUMINT(size)</td><td>-8388608 to 8388607 normal. 0 to 16777215 UNSIGNED*. The maximum number of digits may be specified in parenthesis</td></tr><tr><td>INT(size)</td><td>-2147483648 to 2147483647 normal. 0 to 4294967295 UNSIGNED*. The maximum number of digits may be specified in parenthesis</td></tr><tr><td>BIGINT(size)</td><td>-9223372036854775808 to 9223372036854775807 normal. 0 to 18446744073709551615 UNSIGNED*. The maximum number of digits may be specified in parenthesis</td></tr><tr><td>FLOAT(size,d)</td><td>A small number with a floating decimal point. The maximum number of digits may be specified in the size parameter. The maximum number of digits to the right of the decimal point is specified in the d parameter</td></tr><tr><td>DOUBLE(size,d)</td><td>A large number with a floating decimal point. The maximum number of digits may be specified in the size parameter. The maximum number of digits to the right of the decimal point is specified in the d parameter</td></tr><tr><td>DECIMAL(size,d)</td><td>A DOUBLE stored as a string , allowing for a fixed decimal point. The maximum number of digits may be specified in the size parameter. The maximum number of digits to the right of the decimal point is specified in the d parameter</td></tr></tbody></table><p>*The integer types have an extra option called UNSIGNED. Normally, the integer goes from an negative to positive value. Adding the UNSIGNED attribute will move that range up so it starts at zero instead of a negative number.</p><h3 id="Date-data-types"><a href="#Date-data-types" class="headerlink" title="Date data types:"></a>Date data types:</h3><table><thead><tr><th>Data type</th><th>Description</th></tr></thead><tbody><tr><td>DATE()</td><td>A date. Format: YYYY-MM-DD<strong>Note:</strong> The supported range is from ‘1000-01-01’ to ‘9999-12-31’</td></tr><tr><td>DATETIME()</td><td><em>A date and time combination. Format: YYYY-MM-DD HH:MI:SS<em>*Note:</em></em> The supported range is from ‘1000-01-01 00:00:00’ to ‘9999-12-31 23:59:59’</td></tr><tr><td>TIMESTAMP()</td><td><em>A timestamp. TIMESTAMP values are stored as the number of seconds since the Unix epoch (‘1970-01-01 00:00:00’ UTC). Format: YYYY-MM-DD HH:MI:SS<em>*Note:</em></em> The supported range is from ‘1970-01-01 00:00:01’ UTC to ‘2038-01-09 03:14:07’ UTC</td></tr><tr><td>TIME()</td><td>A time. Format: HH:MI:SS<strong>Note:</strong> The supported range is from ‘-838:59:59’ to ‘838:59:59’</td></tr><tr><td>YEAR()</td><td>A year in two-digit or four-digit format.<strong>Note:</strong> Values allowed in four-digit format: 1901 to 2155. Values allowed in two-digit format: 70 to 69, representing years from 1970 to 2069</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一些重要的SQL命令&quot;&gt;&lt;a href=&quot;#一些重要的SQL命令&quot; class=&quot;headerlink&quot; title=&quot;一些重要的SQL命令&quot;&gt;&lt;/a&gt;一些重要的SQL命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SELECT&lt;/strong&gt; - extrac
      
    
    </summary>
    
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>“Linux下安装Qt4.8”</title>
    <link href="http://yoursite.com/2017/12/16/%E2%80%9CLinux%E4%B8%8B%E5%AE%89%E8%A3%85Qt4-8%E2%80%9D/"/>
    <id>http://yoursite.com/2017/12/16/“Linux下安装Qt4-8”/</id>
    <published>2017-12-16T04:15:54.000Z</published>
    <updated>2017-12-16T04:18:12.544Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu下使用atp-get安装，方法如下（未验证）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install qt4-dev-tools #开发包 　　</div><div class="line">sudo apt-get install qtcreator #IDE　　</div><div class="line">sudo apt-get install qt4-doc #开发帮助文档 　　</div><div class="line">sudo apt-get install qt4-qtconfig #配置工具 　　</div><div class="line">sudo apt-get install qt4-demos #DEMO源码  QT</div></pre></td></tr></table></figure><p><strong>But以上代码中有些为失效状态，考虑用以下命令替代：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Ubuntu下安装Qt 复制代码 代码如下: $ sudo apt-get install qt4-dev-tools qt4-doc qt4-qtconfig qt4-demos qt4-designer 注：qt4-dev-tools 包含了Qt Assistant及Qt Linguist等工具，因此不需要单独安装这两个工具。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ubuntu下使用atp-get安装，方法如下（未验证）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;
      
    
    </summary>
    
    
      <category term="Linux, Python, Qt" scheme="http://yoursite.com/tags/Linux-Python-Qt/"/>
    
  </entry>
  
  <entry>
    <title>CSS Selectors概览</title>
    <link href="http://yoursite.com/2017/12/16/CSS-Selectors%E6%A6%82%E8%A7%88/"/>
    <id>http://yoursite.com/2017/12/16/CSS-Selectors概览/</id>
    <published>2017-12-16T04:11:40.000Z</published>
    <updated>2017-12-16T04:13:02.441Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>Selector</th><th>Example</th><th>Example description</th></tr></thead><tbody><tr><td><a href="https://www.w3schools.com/cssref/sel_class.asp" target="_blank" rel="external">.<em>class</em></a></td><td>.intro</td><td>Selects all elements with class=”intro”</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_id.asp" target="_blank" rel="external">#<em>id</em></a></td><td>#firstname</td><td>Selects the element with id=”firstname”</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_all.asp" target="_blank" rel="external">*</a></td><td>*</td><td>Selects all elements</td></tr><tr><td><em>element</em></td><td>p</td><td>Selects all <p> elements</p></td></tr><tr><td><em>element,element</em></td><td>div, p</td><td>Selects all <div> elements and all <p> elements</p></div></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_element_element.asp" target="_blank" rel="external"><em>element</em> <em>element</em></a></td><td>div p</td><td>Selects all <p> elements inside <div> elements</div></p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_element_gt.asp" target="_blank" rel="external"><em>element</em>&gt;<em>element</em></a></td><td>div &gt; p</td><td>Selects all <p> elements where the parent is a <div> element</div></p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_element_pluss.asp" target="_blank" rel="external"><em>element</em>+<em>element</em></a></td><td>div + p</td><td>Selects all <p> elements that are placed immediately after <div> elements</div></p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_gen_sibling.asp" target="_blank" rel="external"><em>element1</em>~<em>element2</em></a></td><td>p ~ ul</td><td>Selects every <ul> element that are preceded by a <p> element</p></ul></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_attribute.asp" target="_blank" rel="external">[<em>attribute</em>]</a></td><td>[target]</td><td>Selects all elements with a target attribute</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_attribute_value.asp" target="_blank" rel="external">[<em>attribute</em>=<em>value</em>]</a></td><td>[target=_blank]</td><td>Selects all elements with target=”_blank”</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_attribute_value_contains.asp" target="_blank" rel="external">[<em>attribute</em>~=<em>value</em>]</a></td><td>[title~=flower]</td><td>Selects all elements with a title attribute containing the word “flower”</td></tr><tr><td>[[<em>attribute</em>\</td><td>=<em>value</em>]](<a href="https://www.w3schools.com/cssref/sel_attribute_value_lang.asp" target="_blank" rel="external">https://www.w3schools.com/cssref/sel_attribute_value_lang.asp</a>)</td><td>[lang\</td><td>=en]</td><td>Selects all elements with a lang attribute value starting with “en”</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_attr_begin.asp" target="_blank" rel="external">[<em>attribute</em>^=<em>value</em>]</a></td><td>a[href^=”https”]</td><td>Selects every <a> element whose href attribute value begins with “https”</a></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_attr_end.asp" target="_blank" rel="external">[<em>attribute</em>$=<em>value</em>]</a></td><td>a[href$=”.pdf”]</td><td>Selects every <a> element whose href attribute value ends with “.pdf”</a></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_attr_contain.asp" target="_blank" rel="external">[<em>attribute**=</em>value*]</a></td><td>a[href*=”w3schools”]</td><td>Selects every <a> element whose href attribute value contains the substring “w3schools”</a></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_active.asp" target="_blank" rel="external">:active</a></td><td>a:active</td><td>Selects the active link</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_after.asp" target="_blank" rel="external">::after</a></td><td>p::after</td><td>Insert something after the content of each <p> element</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_before.asp" target="_blank" rel="external">::before</a></td><td>p::before</td><td>Insert something before the content of each <p> element</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_checked.asp" target="_blank" rel="external">:checked</a></td><td>input:checked</td><td>Selects every checked <input> element</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_disabled.asp" target="_blank" rel="external">:disabled</a></td><td>input:disabled</td><td>Selects every disabled <input> element</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_empty.asp" target="_blank" rel="external">:empty</a></td><td>p:empty</td><td>Selects every <p> element that has no children (including text nodes)</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_enabled.asp" target="_blank" rel="external">:enabled</a></td><td>input:enabled</td><td>Selects every enabled <input> element</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_firstchild.asp" target="_blank" rel="external">:first-child</a></td><td>p:first-child</td><td>Selects every <p> element that is the first child of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_firstletter.asp" target="_blank" rel="external">::first-letter</a></td><td>p::first-letter</td><td>Selects the first letter of every <p> element</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_firstline.asp" target="_blank" rel="external">::first-line</a></td><td>p::first-line</td><td>Selects the first line of every <p> element</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_first-of-type.asp" target="_blank" rel="external">:first-of-type</a></td><td>p:first-of-type</td><td>Selects every <p> element that is the first </p><p> element of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_focus.asp" target="_blank" rel="external">:focus</a></td><td>input:focus</td><td>Selects the input element which has focus</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_hover.asp" target="_blank" rel="external">:hover</a></td><td>a:hover</td><td>Selects links on mouse over</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_in-range.asp" target="_blank" rel="external">:in-range</a></td><td>input:in-range</td><td>Selects input elements with a value within a specified range</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_invalid.asp" target="_blank" rel="external">:invalid</a></td><td>input:invalid</td><td>Selects all input elements with an invalid value</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_lang.asp" target="_blank" rel="external">:lang(<em>language</em>)</a></td><td>p:lang(it)</td><td>Selects every <p> element with a lang attribute equal to “it” (Italian)</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_last-child.asp" target="_blank" rel="external">:last-child</a></td><td>p:last-child</td><td>Selects every <p> element that is the last child of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_last-of-type.asp" target="_blank" rel="external">:last-of-type</a></td><td>p:last-of-type</td><td>Selects every <p> element that is the last </p><p> element of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_link.asp" target="_blank" rel="external">:link</a></td><td>a:link</td><td>Selects all unvisited links</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_not.asp" target="_blank" rel="external">:not(<em>selector</em>)</a></td><td>:not(p)</td><td>Selects every element that is not a <p> element</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_nth-child.asp" target="_blank" rel="external">:nth-child(<em>n</em>)</a></td><td>p:nth-child(2)</td><td>Selects every <p> element that is the second child of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_nth-last-child.asp" target="_blank" rel="external">:nth-last-child(<em>n</em>)</a></td><td>p:nth-last-child(2)</td><td>Selects every <p> element that is the second child of its parent, counting from the last child</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_nth-last-of-type.asp" target="_blank" rel="external">:nth-last-of-type(<em>n</em>)</a></td><td>p:nth-last-of-type(2)</td><td>Selects every <p> element that is the second </p><p> element of its parent, counting from the last child</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_nth-of-type.asp" target="_blank" rel="external">:nth-of-type(<em>n</em>)</a></td><td>p:nth-of-type(2)</td><td>Selects every <p> element that is the second </p><p> element of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_only-of-type.asp" target="_blank" rel="external">:only-of-type</a></td><td>p:only-of-type</td><td>Selects every <p> element that is the only </p><p> element of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_only-child.asp" target="_blank" rel="external">:only-child</a></td><td>p:only-child</td><td>Selects every <p> element that is the only child of its parent</p></td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_optional.asp" target="_blank" rel="external">:optional</a></td><td>input:optional</td><td>Selects input elements with no “required” attribute</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_out-of-range.asp" target="_blank" rel="external">:out-of-range</a></td><td>input:out-of-range</td><td>Selects input elements with a value outside a specified range</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_read-only.asp" target="_blank" rel="external">:read-only</a></td><td>input:read-only</td><td>Selects input elements with the “readonly” attribute specified</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_read-write.asp" target="_blank" rel="external">:read-write</a></td><td>input:read-write</td><td>Selects input elements with the “readonly” attribute NOT specified</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_required.asp" target="_blank" rel="external">:required</a></td><td>input:required</td><td>Selects input elements with the “required” attribute specified</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_root.asp" target="_blank" rel="external">:root</a></td><td>:root</td><td>Selects the document’s root element</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_selection.asp" target="_blank" rel="external">::selection</a></td><td>::selection</td><td>Selects the portion of an element that is selected by a user</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_target.asp" target="_blank" rel="external">:target</a></td><td>#news:target</td><td>Selects the current active #news element (clicked on a URL containing that anchor name)</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_valid.asp" target="_blank" rel="external">:valid</a></td><td>input:valid</td><td>Selects all input elements with a valid value</td></tr><tr><td><a href="https://www.w3schools.com/cssref/sel_visited.asp" target="_blank" rel="external">:visited</a></td><td>a:visited</td><td>Selects all visited links</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Selector&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Example description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;https://www.w3
      
    
    </summary>
    
    
      <category term="CSS, Python, CSS Selectors" scheme="http://yoursite.com/tags/CSS-Python-CSS-Selectors/"/>
    
  </entry>
  
</feed>
